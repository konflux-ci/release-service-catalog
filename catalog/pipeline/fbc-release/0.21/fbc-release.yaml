---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: fbc-release
  labels:
    app.kubernetes.io/version: "0.21"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/tags: release
spec:
  description: >-
    Tekton release pipeline to interact with FBC Pipeline
  params:
    - name: release
      type: string
      description:
        The namespaced name (namespace/name) of the Release custom resource initiating this pipeline execution
    - name: releaseplan
      type: string
      description: The namespaced name (namespace/name) of the releasePlan
    - name: releaseplanadmission
      type: string
      description: The namespaced name (namespace/name) of the releasePlanAdmission
    - name: releasestrategy
      type: string
      description: The namespaced name (namespace/name) of the releaseStrategy
    - name: snapshot
      type: string
      description: The namespaced name (namespace/name) of the snapshot
    - name: enterpriseContractPolicy
      type: string
      description: JSON representation of the EnterpriseContractPolicy
    - name: enterpriseContractPublicKey
      type: string
      description: Public key to use for validation by the enterprise contract
      default: k8s://openshift-pipelines/public-key
    - name: fromIndex
      type: string
      description: The source Index image (catalog of catalogs) FBC fragment
    - name: targetIndex
      type: string
      description: Index image (catalog of catalogs) the FBC fragment will be added to
    - name: binaryImage
      type: string
      default: ""
      description: OCP binary image to be baked into the index image
    - name: buildTags
      type: string
      default: "[]"
      description: List of additional tags the internal index image copy should be tagged with
    - name: addArches
      type: string
      default: "[]"
      description: List of arches the index image should be built for
    - name: signingConfigMapName
      type: string
      default: "hacbs-signing-pipeline-config"
      description: The ConfigMap to be used by the signing Pipeline
    - name: iibServiceConfigSecret
      default: "iib-services-config"
      type: string
      description: Secret that contains IIB's service configuration
    - name: iibOverwriteFromIndexCredential
      default: "iib-overwrite-fromimage-credentials"
      type: string
      description: Secret that stores IIB's overwrite_from_index_token parameter value
    - name: fbcPublishingCredentials
      type: string
      default: "fbc-publishing-credentials"
      description: Secret used to publish the built index image
    - name: requestUpdateTimeout
      type: string
      description: Max seconds to wait until the status is updated
    - name: buildTimeoutSeconds
      type: string
      description: Max seconds to wait until the build finishes
    - name: verify_ec_task_git_url
      type: string
      description: The git repo url of the verify-enterprise-contract task
    - name: verify_ec_task_git_revision
      type: string
      description: The git repo revision the verify-enterprise-contract task
    - name: verify_ec_task_git_pathInRepo
      type: string
      description: The location of the verify-enterprise-contract task in its repo
    - name: postCleanUp
      type: string
      description: Cleans up workspace after finishing executing the pipeline
      default: "true"
  workspaces:
    - name: release-workspace
  results:
    - name: requestMessage
      value: $(tasks.add-fbc-contribution-to-index-image.results.requestMessage)
    - name: requestReason
      value: $(tasks.add-fbc-contribution-to-index-image.results.requestReason)
    - name: iibIndexImage
      value: $(tasks.extract-index-image.results.indexImage)
    - name: iibIndexImageResolved
      value: $(tasks.extract-index-image.results.indexImageResolved)
  tasks:
    - name: collect-data
      taskRef:
        resolver: "git"
        params:
          - name: url
            value: https://github.com/redhat-appstudio/release-service-bundles.git
          - name: revision
            value: main
          - name: pathInRepo
            value: catalog/task/collect-data/0.2/collect-data.yaml
      params:
        - name: release
          value: $(params.release)
        - name: releaseplan
          value: $(params.releaseplan)
        - name: releaseplanadmission
          value: $(params.releaseplanadmission)
        - name: releasestrategy
          value: $(params.releasestrategy)
        - name: snapshot
          value: $(params.snapshot)
        - name: subdirectory
          value: $(context.pipelineRun.uid)
      workspaces:
        - name: data
          workspace: release-workspace
    - name: verify-enterprise-contract
      taskRef:
        resolver: "git"
        params:
          - name: url
            value: $(params.verify_ec_task_git_url)
          - name: revision
            value: $(params.verify_ec_task_git_revision)
          - name: pathInRepo
            value: $(params.verify_ec_task_git_pathInRepo)
      params:
        - name: IMAGES
          value: "$(workspaces.data.path)/$(context.pipelineRun.uid)/snapshot_spec.json"
        - name: SSL_CERT_DIR
          value: /var/run/secrets/kubernetes.io/serviceaccount
        - name: POLICY_CONFIGURATION
          value: $(params.enterpriseContractPolicy)
        - name: STRICT
          value: "1"
        - name: IGNORE_REKOR
          value: "true"
        - name: PUBLIC_KEY
          value: $(params.enterpriseContractPublicKey)
      workspaces:
        - name: data
          workspace: release-workspace
      runAfter:
        - collect-data
    - name: get-ocp-version
      taskRef:
        resolver: "git"
        params:
          - name: url
            value: https://github.com/redhat-appstudio/release-service-bundles.git
          - name: revision
            value: main
          - name: pathInRepo
            value: catalog/task/get-ocp-version/0.1/get-ocp-version.yaml
      params:
        - name: fbcFragment
          value: "$(tasks.collect-data.results.fbcFragment)"
      runAfter:
        - verify-enterprise-contract
    - name: update-ocp-tag
      taskRef:
        resolver: "git"
        params:
          - name: url
            value: https://github.com/redhat-appstudio/release-service-bundles.git
          - name: revision
            value: main
          - name: pathInRepo
            value: catalog/task/update-ocp-tag/0.1/update-ocp-tag.yaml
      params:
        - name: fromIndex
          value: "$(params.fromIndex)"
        - name: targetIndex
          value: "$(params.targetIndex)"
        - name: binaryImage
          value: "$(params.binaryImage)"
        - name: ocpVersion
          value: "$(tasks.get-ocp-version.results.stored-version)"
    - name: add-fbc-contribution-to-index-image
      workspaces:
        - name: input
          workspace: release-workspace
      taskRef:
        resolver: "git"
        params:
          - name: url
            value: https://github.com/redhat-appstudio/release-service-bundles.git
          - name: revision
            value: main
          - name: pathInRepo
            value: catalog/task/create-internal-request/0.7/create-internal-request.yaml
      params:
        - name: pipelineRunName
          value: $(context.pipelineRun.name)
        - name: request
          value: "iib"
        - name: updateGenericResult
          value: "true"
        - name: subdirectory
          value: $(context.pipelineRun.uid)
        - name: requestUpdateTimeout
          value: "$(params.requestUpdateTimeout)"
        - name: params
          value:
            - name: binaryImage
              value: "$(tasks.update-ocp-tag.results.updated-binaryImage)"
            - name: fromIndex
              value: "$(tasks.update-ocp-tag.results.updated-fromIndex)"
            - name: buildTags
              value: "$(params.buildTags)"
            - name: addArches
              value: "$(params.addArches)"
            - name: buildTimeoutSeconds
              value: "$(params.buildTimeoutSeconds)"
            - name: iibServiceConfigSecret
              value: "$(params.iibServiceConfigSecret)"
            - name: iibOverwriteFromIndexCredential
              value: "$(params.iibOverwriteFromIndexCredential)"
            - name: fbcFragment
              value: "$(tasks.collect-data.results.fbcFragment)"
      runAfter:
        - verify-enterprise-contract
    - name: extract-requester-from-release
      taskRef:
        resolver: "git"
        params:
          - name: url
            value: https://github.com/redhat-appstudio/release-service-bundles.git
          - name: revision
            value: main
          - name: pathInRepo
            value: catalog/task/upstream/tekton/kubernetes-actions/0.2/kubernetes-actions.yaml
      params:
        - name: image
          value: "quay.io/hacbs-release/cloud-builders-kubectl\
            @sha256:8ab94be8b2b4f3d117f02d868b39540fddd225447abf4014f7ba4765cb39f753"
        - name: script
          value: |
            set -x

            NAMESPACE=$(echo $(params.release) | cut -d '/' -f 1)
            NAME=$(echo $(params.release) | cut -d '/' -f 2)

            AUTHOR=$(kubectl get release ${NAME} -n ${NAMESPACE} \
            -o=jsonpath='{.status.attribution.author}' | tee $(results.output-result.path))

            if [[ ${AUTHOR} == "" ]] ; then exit 1 ; fi
    - name: sign-index-image
      workspaces:
        - name: input
          workspace: release-workspace
      taskRef:
        resolver: "git"
        params:
          - name: url
            value: https://github.com/redhat-appstudio/release-service-bundles.git
          - name: revision
            value: main
          - name: pathInRepo
            value: catalog/task/create-internal-request/0.7/create-internal-request.yaml
      params:
        - name: pipelineRunName
          value: $(context.pipelineRun.name)
        - name: inputDataFile
          value: $(tasks.add-fbc-contribution-to-index-image.results.requestResultsFile)
        - name: request
          value: "hacbs-signing-pipeline"
        - name: subdirectory
          value: $(context.pipelineRun.uid)
        - name: params
          value:
            - name: manifest_digest
              value: "sharedRequestFile:json:.jsonBuildInfo"
              jsonKey: ".index_image_resolved"
            - name: pipeline_image
              value: "quay.io/redhat-isv/operator-pipelines-images:released"
            - name: reference
              value: $(params.targetIndex)
            - name: requester
              value: $(tasks.extract-requester-from-release.results.output-result)
            - name: config_map_name
              value: $(params.signingConfigMapName)
      when:
        - input: "$(tasks.add-fbc-contribution-to-index-image.results.genericResult)"
          operator: in
          values: ["fbc_opt_in=true"]
    - name: extract-index-image
      workspaces:
        - name: input
          workspace: release-workspace
      taskRef:
        resolver: "git"
        params:
          - name: url
            value: https://github.com/redhat-appstudio/release-service-bundles.git
          - name: revision
            value: main
          - name: pathInRepo
            value: catalog/task/extract-index-image/0.1/extract-index-image.yaml
      params:
        - name: inputDataFile
          value: $(tasks.add-fbc-contribution-to-index-image.results.requestResultsFile)
    - name: publish-index-image
      workspaces:
        - name: input
          workspace: release-workspace
      taskRef:
        resolver: "git"
        params:
          - name: url
            value: https://github.com/redhat-appstudio/release-service-bundles.git
          - name: revision
            value: main
          - name: pathInRepo
            value: catalog/task/create-internal-request/0.7/create-internal-request.yaml
      params:
        - name: pipelineRunName
          value: $(context.pipelineRun.name)
        - name: inputDataFile
          value: $(tasks.add-fbc-contribution-to-index-image.results.requestResultsFile)
        - name: request
          value: "publish-index-image-pipeline"
        - name: subdirectory
          value: $(context.pipelineRun.uid)
        - name: params
          value:
            - name: sourceIndex
              value: "sharedRequestFile:json:.jsonBuildInfo"
              jsonKey: ".index_image_resolved"
            - name: targetIndex
              value: $(tasks.update-ocp-tag.results.updated-targetIndex)
            - name: publishingCredentials
              value: $(params.fbcPublishingCredentials)
            - name: retries
              value: "0"
      when:
        - input: "$(tasks.add-fbc-contribution-to-index-image.results.genericResult)"
          operator: in
          values: ["fbc_opt_in=true"]
      runAfter:
        - sign-index-image
  finally:
    - name: cleanup
      taskRef:
        resolver: "git"
        params:
          - name: url
            value: https://github.com/redhat-appstudio/release-service-bundles.git
          - name: revision
            value: main
          - name: pathInRepo
            value: catalog/task/cleanup-workspace/0.2/cleanup-workspace.yaml
      when:
        - input: $(params.postCleanUp)
          operator: in
          values: ["true"]
      params:
        - name: subdirectory
          value: "$(context.pipelineRun.uid)"
      workspaces:
        - name: input
          workspace: release-workspace
