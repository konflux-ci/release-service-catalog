{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "additionalProperties": true,
  "properties": {
    "systems": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": ["releaseNotes", "cdn"],
        "description": "List of systems that are supported to be required in the data"
      }
    },
    "fbc": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "request": {
          "type": "string",
          "description": "The internal pipeline name to handle requests e.g. iib"
        },
        "publishingCredentials": {
          "type": "string",
          "description": "The credentials used to publish the image e.g. example-fbc-publishing-credentials"
        },
        "buildTags": {
          "type": "array",
          "description": "The tags to be added to the build e.g. [ 'example-tag-1', 'example-tag-2' ]",
          "items": {
            "type": "string"
          }
        },
        "addArches": {
          "type": "array",
          "description": "The arches to be added to the build e.g. [ 'x86_64', 'amd64' ]",
          "items": {
            "type": "string"
          }
        },
        "hotfix": {
          "type": "boolean",
          "description": "Indicates if the build is a hotfix"
        },
        "preGA": {
          "type": "boolean",
          "description": "Indicates if the build is a preGA"
        },
        "stagedIndex": {
          "type": "boolean",
          "description": "Indicates if the build is a staged index"
        },
        "productName": {
          "type": "string",
          "description": "The product name e.g. exampleproduct ",
          "pattern": "^[a-z]+$"
        },
        "productVersion": {
          "type": "string",
          "description": "The product version e.g v1.0.0"
        },
        "buildTimeoutSeconds": {
          "type": "integer",
          "description": "The build timeout in seconds e.g. 1500"
        },
        "requestTimeoutSeconds": {
          "type": "integer",
          "description": "The requested timeout in seconds e.g. 1500"
        },
        "timestampFormat": {
          "type": "string",
          "description": "The timestamp format which defaults to %s e.g. %Y-%m-%d"
        },
        "issueId": {
          "type": "string",
          "description": "The issue ID e.g. bz123456"
        },
        "allowedPackages": {
          "type": "array",
          "description": "The allowed packages e.g. ['example-package-1', 'example-package-2'] ",
          "items": {
            "type": "string"
          }
        },
        "fromIndex": {
          "type": "string",
          "description": "The source index image e.g. registry-proxy.engineering.redhat.com/rh-osbs/iib-preview-rhtap:v4.09  "
        },
        "targetIndex": {
          "type": "string",
          "description": "The target index image e.g. quay.io/redhat/redhat----preview-operator-index:v4.10 "
        },
        "configMapName": {
          "type": "string",
          "description": "The configmap that exists on the cluster"
        },
        "pipelineImage": {
          "type": "string",
          "description": "An image with CLI tools needed for the signing by the internal signing pipelines"
        }
      }
    },
    "releaseNotes": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "product_id": {
          "type": "integer",
          "description": "The product ID e.g 321"
        },
        "product_name": {
          "type": "string",
          "description": "The product name e.g. exampleproduct"
        },
        "product_version": {
          "type": "string",
          "description": "The product version e.g v1.0.0",
          "pattern": "^(fbc|[vV]?(?:0|[1-9]\\d*)\\.(?:0|[1-9]\\d*)|[vV]?(?:0|[1-9]\\d*)\\.(?:0|[1-9]\\d*)\\.(?:0|[1-9]\\d*)|[vV]?(?:0|[1-9]\\d*)\\.(?:0|[1-9]\\d*) ([Aa]lpha|[Bb]eta|fast|tech preview)|[vV]?(?:0|[1-9]\\d*)\\.(?:0|[1-9]\\d*)\\.(?:0|[1-9]\\d*) ([Aa]lpha|[Bb]eta|fast|tech preview))$"
        },
        "product_stream": {
          "type": "string",
          "description": "The product stream e.g. RHEL-tp1"
        },
        "cpe": {
          "type": "string",
          "description": "The product CPE ID e.g. cpe:/a:example:openstack:el8"
        },
        "type": {
          "type": "string",
          "enum": ["RHEA", "RHBA", "RHSA"],
          "description": "Type advisory type e.g. RHSA"
        },
        "synopsis": {
          "type": "string",
          "description": "The advisory synopsis e.g. my advisory synopsis"
        },
        "topic": {
          "type": "string",
          "description": "The advisory topic e.g. my advisory topic"
        },
        "description": {
          "type": "string",
          "description": "The advisory description e.g. This advisory is for security fixes to my product"
        },
        "solution": {
          "type": "string",
          "description": "The advisory solution e.g. For details on how to apply this update, see docs.com"
        },
        "references": {
          "type": "array",
          "description": "The advisory references e.g. [ 'https://access.redhat.com/security/updates/classification', 'https://docs.redhat.com/some/example/release-notes' ] ",
          "items": {
            "type": "string"
          }
        },
        "issues": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "fixed": {
              "type": "array",
              "items": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The ID of the fixed issue e.g. RHOSP-3414"
                  },
                  "source": {
                    "type": "string",
                    "description": "The URL of the where the issue is tracked e.g. bugzilla.example.com"
                  }
                }
              }
            }
          }
        },
        "content": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "images": {
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "containerImage": {
                    "type": "string",
                    "description": "The container image e.g. quay.io/example/openstack@sha256:example"
                  },
                  "repository": {
                    "type": "string",
                    "description": "The repository e.g. registry.redhat.io/rhosp16-rhel8/openstack"
                  },
                  "tags": {
                    "type": "array",
                    "description": "A list of tags e.g. [ 'latest', 'v1' ]",
                    "items": {
                      "type": "string"
                    }
                  },
                  "component": {
                    "type": "string",
                    "description": "The component of the image e.g. adv-comp-1"
                  },
                  "architecture": {
                    "type": "string",
                    "description": "The architecture of the image e.g. amd64"
                  },
                  "signingKey": {
                    "type": "string",
                    "description": "The key used to sign the image"
                  },
                  "purl": {
                    "type": "string",
                    "description": "The package URL representing the image e.g. pkg:example/openstack@sha256:abcde?repository_url=quay.io/example/rhosp16-rhel8"
                  },
                  "cves": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "fixed": {
                        "type": "object",
                        "description": "A list of fixed CVEs",
                        "additionalProperties": {
                          "type": "object",
                          "properties": {
                            "components": {
                              "type": "array",
                              "description": "A list of CVEs fixed e.g. [ 'pkg:golang/golang.org/x/net/http2@1.11.1' ]",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "sign": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "cosignSecretName": {
          "type": "string",
          "description": "Name of secret which contains AWS_REGION, AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY and SIGN_KEY"
        },
        "request": {
          "type": "string",
          "description": "The signing pipeline name to handle the request"
        },
        "configMapName": {
          "type": "string",
          "description": "The configmap that exists on the cluster for signing of the images e.g. hacbs-signing-pipeline-config-redhatbeta2"
        },
        "pipelineImage": {
          "type": "string",
          "description": "An image with CLI tools needed for the signing by the internal signing pipelines"
        }
      }
    },
    "github": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "githubSecret": {
          "type": "string",
          "description": "The secret used to authenticate GitHub via the the GitHub token"
        }
      }
    },
    "pyxis": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "secret": {
          "type": "string",
          "description": "The secret used to authenticate Pyxis e.g. example-collect-pyxis-params-cert"
        },
        "server": {
          "type": "string",
          "description": "The Pyxis server being used e.g. production-internal",
          "enum": [
            "stage",
            "production",
            "production-internal",
            "stage-internal"
          ]
        },
        "skipRepoPublishing": {
          "type": "boolean",
          "description": "Skip setting the pyxis repo to published"
        }
      }
    },
    "slack": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "slack-notification-secret": {
          "type": "string",
          "description": "The secret key for slack notifications e.g. example-team-slack-webhook-notification-secret"
        },
        "slack-webhook-notification-secret-keyname": {
          "type": "string",
          "description": "The key name for the slack webhook notification secret e.g. release"
        }
      }
    },
    "infra-deployment-update-script": {
      "type": "string",
      "description": "A script that can alter files in the infra-deployment repo before a a PR is created"
    },
    "singleComponentMode": {
      "type": "boolean",
      "description": "Whether testing and releasing single component is enabled."
    },
    "mapping": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "components": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string",
                "description": "The component name found in the snapshot e.g. example-component"
              },
              "repository": {
                "type": "string",
                "description": "URL where you want to push the artifact e.g. quay.io/redhat/example-component"
              },
              "baseImage": {
                "type": "boolean",
                "description": "Indicates if the component serves as a base image for another component's containerImage"
              },
              "tags": {
                "type": "array",
                "description": "The tags to push the artifact e.g. [ {{ git_sha }}, {{ digest_sha }}, 1.0 ]",
                "items": {
                  "type": "string"
                }
              },
              "staged": {
                "type": "object",
                "properties": {
                  "destination": {
                    "type": "string",
                    "description": "repo in pulp where staged files should be placed"
                  },
                  "version": {
                    "type": "string",
                    "description": "version in pulp where staged files should be placed in repo"
                  },
                  "files": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "filename": {
                          "type": "string",
                          "description": "filename when file is uploaded"
                        },
                        "source": {
                          "type": "string",
                          "description": "name of file within image"
                        }
                      }
                    }
                  }
                }
              },
              "contentGateway": {
                "type": "object",
                "properties": {
                  "productName": {
                    "type": "string",
                    "description": "productName in content gateway"
                  },
                  "productCode": {
                    "type": "string",
                    "description": "productCode in content gateway"
                  },
                  "productVersionName": {
                    "type": "string",
                    "description": "productVersionName in content gateway"
                  },
                  "filePrefix": {
                    "type": "string",
                    "description": "filePrefix to use to select files to add to content gateway"
                  }
                }
              },
              "pushSourceContainer": {
                "type": "boolean",
                "description": "Indicates if the source container should be pushed"
              },
              "public": {
                "type": "boolean",
                "description": "Indicates if the target repository should be made public"
              }
            }
          }
        },
        "defaults": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "tags": {
              "type": "array",
              "description": "The default tags to push for all components e.g. [ '{{ git_sha }}', '{{ digest_sha }}', '1.0' ]",
              "items": {
                "type": "string"
              }
            },
            "pushSourceContainer": {
              "type": "boolean",
              "description": "Indicates if the source container should be pushed"
            },
            "public": {
              "type": "boolean",
              "description": "Indicates if the target repositories should be made public"
            }
          }
        },
        "registrySecret": {
          "type": "string",
          "description": "The k8s secret containing token for quay.io API"
        }
      }
    },
    "cdn": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "env": {
          "type": "string",
          "enum": ["qa", "stage", "production"],
          "description": "The environment for the CDN configuration e.g. qa"
        }
      }
    },
    "mrrc": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "release": {
          "type": "string",
          "enum": ["ga", "ea"],
          "description": "The release for the MRRC configuration e.g. ga"
        },
        "environment": {
          "type": "string",
          "enum": ["dev", "stage", "production"],
          "description": "The environment for the MRRC configuration e.g. dev"
        },
        "awsSecret": {
          "type": "string",
          "description": "The k8s secret containing the aws credential for MRRC aws access"
        },
        "charonConfig": {
          "type": "string",
          "description": "The charon configuration content which will be stored as file for charon tools"
        }
      }
    }
  },
  "allOf": [
    {
      "if": {
        "properties": {
          "systems": {
            "contains": {
              "const": "releaseNotes"
            }
          }
        }
      },
      "then": {
        "required": [
          "releaseNotes"
        ],
        "properties": {
          "releaseNotes": {
            "required": [
              "product_id",
              "product_name",
              "product_version",
              "product_stream",
              "cpe",
              "type",
              "synopsis",
              "topic",
              "description",
              "solution",
              "references",
              "content"
            ],
            "properties": {
              "content": {
                "required": [
                  "images"
                ]
              }
            }
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "systems": {
            "contains": {
              "const": "cdn"
            }
          }
        }
      },
      "then": {
        "required": [
          "cdn"
        ],
        "properties": {
          "cdn": {
            "required": [
              "env"
            ]
          }
        }
      }
    }
  ]
}
