apiVersion: tekton.dev/v1beta1
kind: StepAction
metadata:
  name: reduce-snapshot-action
spec:
  image: quay.io/konflux-ci/appstudio-utils:ab6b0b8e40e440158e7288c73aff1cf83a2cc8a9@sha256:24179f0efd06c65d16868c2d7eb82573cce8e43533de6cea14fec3b7446e0b14
  params:
    - name: IMAGES
      type: string
    - name: SINGLE_COMPONENT
      type: string
    - name: CR_TO_QUERY
      type: string
    - name: CR_TO_QUERY_NAMESPACE
      type: string
      default: ""
    - name: SNAPSHOT_PATH
      type: string
  env:
    - name: SNAPSHOT
      value: $(params.IMAGES)
    - name: SINGLE_COMPONENT
      value: $(params.SINGLE_COMPONENT)
    - name: CR_TO_QUERY
      value: $(params.CR_TO_QUERY)
    - name: CR_TO_QUERY_NAMESPACE
      value: $(params.CR_TO_QUERY_NAMESPACE)
    - name: SNAPSHOT_PATH
      value: $(params.SNAPSHOT_PATH)
  script: |
    #!/usr/bin/env bash
    set -eux

    #SNAPSHOT_PATH="${HOMEDIR}/snapshot.json"

    echo "Single Component mode? ${SINGLE_COMPONENT}"
    if [ "${SINGLE_COMPONENT}" == "true" ]; then
    
      CR_NAMESPACE_ARG=""
      if [ ! -z "${CR_TO_QUERY_NAMESPACE}" ]; then
        CR_NAMESPACE_ARG="-n ${CR_TO_QUERY_NAMESPACE}"
      fi
      SNAPSHOT_CREATION_TYPE=$(oc get "$CR_TO_QUERY" ${CR_NAMESPACE_ARG} -ojson | jq -rec '.metadata.labels."test.appstudio.openshift.io/type" // ""')
      SNAPSHOT_CREATION_COMPONENT=$(oc get "$CR_TO_QUERY" ${CR_NAMESPACE_ARG} -ojson | jq -rec '.metadata.labels."appstudio.openshift.io/component" // ""')

      echo "SNAPSHOT_CREATION_TYPE: ${SNAPSHOT_CREATION_TYPE}"
      echo "SNAPSHOT_CREATION_COMPONENT: ${SNAPSHOT_CREATION_COMPONENT}"
      if [ "${SNAPSHOT_CREATION_TYPE}" == "component" ] && [ "${SNAPSHOT_CREATION_COMPONENT}" != "" ]; then
        echo "Single Component mode is ${SINGLE_COMPONENT} and Snapshot type is component"
        # verify if in json form
        set +e
        echo "${SNAPSHOT}" | jq -e > /dev/null 2>&1
        CHECK_JSON=$?
        set -e
        if [ "${CHECK_JSON}" != "0" ]; then
          # try to load as file first
          set +e
          cat "${SNAPSHOT}" | jq -e > /dev/null 2>&1
          CHECK_JSON_FILE=$?
          set -e
          if [ "${CHECK_JSON_FILE}" != "0" ]; then
            echo "Cannot load snapshot from json string or file"
            exit 1
          fi
          SNAPSHOT=$(cat "${SNAPSHOT}")
        fi
        REDUCED_SNAPSHOT=$(echo "${SNAPSHOT}" | jq --arg component "${SNAPSHOT_CREATION_COMPONENT}" \
        'del(.components[] | select(.name != $component))')

        ## make sure we still have 1 component
        COMPONENT_COUNT=$(echo "$REDUCED_SNAPSHOT" | jq -r '[ .components[] ] | length')
        echo "COMPONENT_COUNT: ${COMPONENT_COUNT}"
        if [ "${COMPONENT_COUNT}" != "1" ] ; then
          echo "Error: Reduced Snapshot has ${COMPONENT_COUNT} components. It should contain 1"
          echo "       Verify that the Snapshot contains the built component: ${SNAPSHOT_CREATION_COMPONENT}"
          exit 1
        fi

        echo "Reducing Snapshot to:"
        echo "$REDUCED_SNAPSHOT" | jq .
        SNAPSHOT=$(echo "$REDUCED_SNAPSHOT" | tr -d ' ' | tr -d '\n')
      fi
    fi

    echo "$SNAPSHOT" > "${SNAPSHOT_PATH}"
