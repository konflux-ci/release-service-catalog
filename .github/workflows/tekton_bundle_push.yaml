---
name: Tekton Bundle Push
on:  # yamllint disable-line rule:truthy
  push:
    branches: ['main']
  workflow_dispatch:
env:
  IMAGE_REGISTRY: quay.io
  IMAGE_NAMESPACE: hacbs-release
  REGISTRY_USER: ${{ secrets.QUAY_ROBOT_USER }}
  REGISTRY_PASSWORD: ${{ secrets.QUAY_ROBOT_TOKEN }}
jobs:
  run-pipeline:
    name: Tekton Bundle
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          mkdir -vp $HOME/{bin,.kube} || true
          pushd $HOME/bin
          curl -LO https://dl.k8s.io/release/v1.23.0/bin/linux/amd64/kubectl
          popd
          PATH="$HOME/bin:$PATH"
          cat <<-EOF > $HOME/.kube/config
          apiVersion: v1
          clusters:
          - cluster:
              insecure-skip-tls-verify: true
              server: https://api.example.com:6443
            name: api-example-dot-com:6443
          contexts:
          - context:
              cluster: api-example-dot-com:6443
              namespace: default
              user: kube:admin/api-example-dot-com:6443
            name: default/api-example-dot-com:6443/kube:admin
          current-context: default/api-example-dot-com:6443/kube:admin
          kind: Config
          EOF
      - uses: jerop/tkn@v0.1.0
      - uses: redhat-actions/podman-login@v1
        with:
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}
          registry: ${{ env.IMAGE_REGISTRY }}
      - run: |
          for dir in ${GITHUB_WORKSPACE}/*
          do
            [[ -d "$dir" ]] || continue
            printf 'Found Bundle dir: %s\n' $dir
            BUNDLE_NAME="${dir##*/}"
            BUNDLE_FILES=()
            for file in  $dir/*.y{,a}ml
            do
              [[ -e "$file" ]] || continue
              printf " * %s\n" $file
              BUNDLE_FILES+=("$file")
            done
            printf -v bundle_files -- '-f %s ' ${BUNDLE_FILES[*]}
            printf -v image_sha '%s/%s/%s:%s' \
              ${{ env.IMAGE_REGISTRY }} \
              ${{ env.IMAGE_NAMESPACE }} \
              "${BUNDLE_NAME}" \
              "${GITHUB_SHA:0:8}" ;
            printf -v image_latest '%s/%s/%s:%s' \
              ${{ env.IMAGE_REGISTRY }} \
              ${{ env.IMAGE_NAMESPACE }} \
              "${BUNDLE_NAME}" \
              "latest" ;
            tkn bundle push ${bundle_files} $image_sha ;
            tkn bundle push ${bundle_files} $image_latest ;
          done
