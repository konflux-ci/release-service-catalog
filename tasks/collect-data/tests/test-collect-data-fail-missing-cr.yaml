---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: test-collect-data-fail-missing-cr
  annotations:
    test/assert-task-failure: "run-task"
spec:
  description: |
    Run the collect-data task without a snapshot cr and verify that the task fails as expected.
  workspaces:
    - name: tests-workspace
  tasks:
    - name: setup
      taskSpec:
        steps:
          - name: create-crs
            image: quay.io/hacbs-release/release-utils:4d8649dbb2b626f5fe9f4ff83c1bc3be268fad31
            script: |
              #!/usr/bin/env sh
              set -eux

              cat > release << EOF
              apiVersion: appstudio.redhat.com/v1alpha1
              kind: Release
              metadata:
                name: release-sample
                namespace: default
              spec:
                snapshot: foo
                releasePlan: foo
              EOF
              kubectl apply -f release

              cat > releaseplan << EOF
              apiVersion: appstudio.redhat.com/v1alpha1
              kind: ReleasePlan
              metadata:
                name: releaseplan-sample
                namespace: default
              spec:
                application: foo
                target: foo
              EOF
              kubectl apply -f releaseplan

              cat > releaseplanadmission << EOF
              apiVersion: appstudio.redhat.com/v1alpha1
              kind: ReleasePlanAdmission
              metadata:
                name: releaseplanadmission-sample
                namespace: default
              spec:
                application: foo
                origin: foo
                releaseStrategy: foo
              EOF
              kubectl apply -f releaseplanadmission

              cat > releasestrategy << EOF
              apiVersion: appstudio.redhat.com/v1alpha1
              kind: ReleaseStrategy
              metadata:
                name: releasestrategy-sample
                namespace: default
              spec:
                pipeline: foo
                policy: foo
              EOF
              kubectl apply -f releasestrategy
    - name: run-task
      taskRef:
        name: collect-data
      params:
        - name: release
          value: default/release-sample
        - name: releaseplan
          value: default/releaseplan-sample
        - name: releaseplanadmission
          value: default/releaseplanadmission-sample
        - name: releasestrategy
          value: default/releasestrategy-sample
        - name: snapshot
          value: default/snapshot-sample
        - name: subdirectory
          value: $(context.pipelineRun.uid)
      runAfter:
        - setup
      workspaces:
        - name: data
          workspace: tests-workspace
  finally:
    - name: cleanup
      taskSpec:
        steps:
          - name: delete-crs
            image: quay.io/hacbs-release/release-utils:4d8649dbb2b626f5fe9f4ff83c1bc3be268fad31
            script: |
              #!/usr/bin/env sh
              set -eux

              kubectl delete release release-sample
              kubectl delete releaseplan releaseplan-sample
              kubectl delete releaseplanadmission releaseplanadmission-sample
              kubectl delete releasestrategy releasestrategy-sample
