---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: create-github-release
  labels:
    app.kubernetes.io/version: "2.1.1"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/tags: release
spec:
  description: >-
    Tekton task that creates a release on github.com via the GitHub API
  params:
    - name: repository
      type: string
      description: "The github repository where the release should be created"
    - name: release_version
      type: string
      description: "The version string of the new release"
    - name: githubSecret
      type: string
      description: "The kube secret to use to authenticate to GitHub, containing one key: token"
    - name: content_directory
      type: string
      description: "The directory inside the workspace to find files for release"
    - name: resultsDirPath
      type: string
      description: Path to the results directory in the data workspace
  workspaces:
    - name: data
      description: The workspace where the binaries to release reside
  results:
    - name: url
      type: string
      description: URL to inspect the created release
  steps:
    - name: create-release-from-binaries
      image: quay.io/konflux-ci/release-service-utils:e633d51cd41d73e4b3310face21bb980af7a662f
      script: |
        #!/usr/bin/env bash
        set -ex

        RESULTS_FILE="$(workspaces.data.path)/$(params.resultsDirPath)/create-github-release-results.json"
        
        cd "$(workspaces.data.path)/$CONTENT_DIRECTORY"
        set -o pipefail
        shopt -s failglob
        gh release create "v${RELEASE_VERSION}" ./*.zip ./*.json ./*SHA256SUMS ./*.sig \
          --repo "$REPOSITORY" --title "Release $RELEASE_VERSION" | tee "$(results.url.path)"

        jq -n --arg release "$(cat "$(results.url.path)")" '{"github-release": {"url": $release}}' | tee "$RESULTS_FILE"
      env:
        - name: GH_TOKEN
          valueFrom:
            secretKeyRef:
              name: $(params.githubSecret)
              key: token
        - name: REPOSITORY
          value: $(params.repository)
        - name: RELEASE_VERSION
          value: $(params.release_version)
        - name: CONTENT_DIRECTORY
          value: $(params.content_directory)
