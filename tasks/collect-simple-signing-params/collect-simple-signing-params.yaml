---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: collect-simple-signing-params
  labels:
    app.kubernetes.io/version: "0.1.0"
  annotations:
    tekton.dev/tags: release
spec:
  params:
    - name: config_map_name
      description: Name of a configmap with pipeline configuration
  results:
    - name: pyxis_url
      description: Container API URL based for selected environment
    - name: sig_key_id
      description: The signing key id that index image claims are signed with
    - name: sig_key_name
      description: The signing key name that index image claims are signed with
    - name: umb_url
      description: umb host to connect to for messaging, e.g. for signing
    - name: umb_listen_topic
      description: umb topic which is used for listening
    - name: umb_publish_topic
      description: umb topic which is used for publishing
    - name: umb_client_name
      description: Client name to connect to umb, usually a service account name
    - name: ssl_cert_secret_name
      description: SSL secret name
    - name: ssl_cert_file_name
      description: SSL certificate file name
    - name: ssl_key_file_name
      description: SSL key file name
  steps:
    - name: collect-simple-signing-params
      image: quay.io/konflux-ci/release-service-utils:7d0135b80a47cdaa225010ea1e2dff78d057c922
      env:
        - name: config_map_name
          value: $(params.config_map_name)
      script: |
        #!/bin/bash
        set -ex

        configMapJson=$(kubectl get "cm/${config_map_name:?}" -ojson)
        PYXIS_URL=$(jq -er '.data.PYXIS_URL' <<< "${configMapJson}")
        SIG_KEY_ID=$(jq -er '.data.SIG_KEY_ID' <<< "${configMapJson}")
        SIG_KEY_NAME=$(jq -er '.data.SIG_KEY_NAME' <<< "${configMapJson}")
        SSL_CERT_FILE_NAME=$(jq -er '.data.SSL_CERT_FILE_NAME' <<< "${configMapJson}")
        SSL_CERT_SECRET_NAME=$(jq -er '.data.SSL_CERT_SECRET_NAME' <<< "${configMapJson}")
        SSL_KEY_FILE_NAME=$(jq -er '.data.SSL_KEY_FILE_NAME' <<< "${configMapJson}")
        UMB_CLIENT_NAME=$(jq -er '.data.UMB_CLIENT_NAME' <<< "${configMapJson}")
        UMB_LISTEN_TOPIC=$(jq -er '.data.UMB_LISTEN_TOPIC' <<< "${configMapJson}")
        UMB_PUBLISH_TOPIC=$(jq -er '.data.UMB_PUBLISH_TOPIC' <<< "${configMapJson}")
        UMB_URL=$(jq -er '.data.UMB_URL' <<< "${configMapJson}")

        echo -n "$PYXIS_URL" | tee "$(results.pyxis_url.path)"
        echo -n "$SIG_KEY_ID" | tee "$(results.sig_key_id.path)"
        echo -n "$SIG_KEY_NAME" | tee "$(results.sig_key_name.path)"
        echo -n "$SSL_CERT_FILE_NAME" | tee "$(results.ssl_cert_file_name.path)"
        echo -n "$SSL_CERT_SECRET_NAME" | tee "$(results.ssl_cert_secret_name.path)"
        echo -n "$SSL_KEY_FILE_NAME" | tee "$(results.ssl_key_file_name.path)"
        echo -n "$UMB_CLIENT_NAME" | tee "$(results.umb_client_name.path)"
        echo -n "$UMB_LISTEN_TOPIC" | tee "$(results.umb_listen_topic.path)"
        echo -n "$UMB_PUBLISH_TOPIC" | tee "$(results.umb_publish_topic.path)"
        echo -n "$UMB_URL" | tee "$(results.umb_url.path)"
