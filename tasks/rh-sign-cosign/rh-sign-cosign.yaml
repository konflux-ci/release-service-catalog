# This file was generated by command:
#/home/jluza/github/jluza/pytractions/pytractions/cli.py generate_tekton_task --volume userdata:userdata --simple-params signtractions.tractors.t_sign_snapshot:SignSnapshot quay.io/jluza/signtractions:testing
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  annotations:
    tekton.dev/pipelines.minVersion: 0.12.1
    tekton.dev/tags: release
  labels:
    app.kubernetes.io/version: 1.0.0
  name: cosign-sign-snapshot
spec:
  description: |2

        Sign containers in release snapshot.
  params:
  - description: 'FakeCosignSignerWrapper: Records of fake entry point runs.'
    name: r_signer_wrapper_cosign.r.fake_entry_point_runs
    type: string
  - description: 'FakeCosignSignerWrapper: Fake entry point returns for testing.'
    name: r_signer_wrapper_cosign.r.fake_entry_point_returns
    type: string
  - description: 'FakeCosignSignerWrapper: Fake entry point requests for testing.'
    name: r_signer_wrapper_cosign.r.fake_entry_point_requests
    type: string
  - description: |-
      FakeCosignSignerWrapper: Path to pubtools-sign config file.
      CosignSignerWrapper: Path to pubtools-sign config file.
      MsgSignerWrapper: Path to pubtools-sign config file.
    name: r_signer_wrapper_cosign.r.config_file
    type: string
  - default: '50'
    description: 'MsgSignerWrapper: '
    name: r_signer_wrapper_cosign.r.MAX_MANIFEST_DIGESTS_PER_SEARCH_REQUEST
    type: string
  - default: '7'
    description: 'MsgSignerWrapper: Number of threads to use for Pyxis requests.'
    name: r_signer_wrapper_cosign.r.settings.num_thread_pyxis
    type: string
  - description: 'MsgSignerWrapper: Pyxis SSL client key file.'
    name: r_signer_wrapper_cosign.r.settings.pyxis_ssl_key_file
    type: string
  - description: 'MsgSignerWrapper: Pyxis SSL client certificate file.'
    name: r_signer_wrapper_cosign.r.settings.pyxis_ssl_crt_file
    type: string
  - description: 'MsgSignerWrapper: Pyxis server URL.'
    name: r_signer_wrapper_cosign.r.settings.pyxis_server
    type: string
  - description: 'FakeQuayClient: Fake manifests for testing.'
    name: r_dst_quay_client.r.fake_manifests
    type: string
  - description: |-
      FakeQuayClient: Quay registry hostname.
      QuayClient: Quay registry hostname.
    name: r_dst_quay_client.r.host
    type: string
  - description: |-
      FakeQuayClient: Password for Quay registry.
      QuayClient: Password for Quay registry.
    name: r_dst_quay_client.r.password
    type: string
  - description: |-
      FakeQuayClient: Username for Quay registry.
      QuayClient: Username for Quay registry.
    name: r_dst_quay_client.r.username
    type: string
  - description: Json representation of release snapshot.
    name: i_snapshot_str.data
    type: string
  - description: Path to a file containing snapshot in json format.
    name: i_snapshot_file.data
    type: string
  - description: Signing key used to sign containers. One key per container.
    name: i_signing_key.data
    type: string
  - description: Task ID to identify signing request.
    name: i_task_id.data
    type: string
  - description: Pool size used for STMD tractions.
    name: a_pool_size.a
    type: string
  - description: STMD executor type.
    name: a_executor_type.a
    type: string
  steps:
  - image: quay.io/jluza/signtractions:latest
    name: run
    script: |
      #!/usr/bin/bash --posix

      python -m pytractions.container_runner run --io-type=JSON --store-output state=$(workspaces.outputs.path)/root::state --store-output stats=$(workspaces.outputs.path)/root::stats --store-output o_sign_entries=$(workspaces.outputs.path)/root::o_sign_entries\
          "signtractions.tractors.t_sign_snapshot:SignSnapshot"\
          r_signer_wrapper_cosign.r.fake_entry_point_runs=$(params["r_signer_wrapper_cosign.r.fake_entry_point_runs"])\
          r_signer_wrapper_cosign.r.fake_entry_point_returns=$(params["r_signer_wrapper_cosign.r.fake_entry_point_returns"])\
          r_signer_wrapper_cosign.r.fake_entry_point_requests=$(params["r_signer_wrapper_cosign.r.fake_entry_point_requests"])\
          r_signer_wrapper_cosign.r.config_file='"$(params["r_signer_wrapper_cosign.r.config_file"])"'\
          r_signer_wrapper_cosign.r.MAX_MANIFEST_DIGESTS_PER_SEARCH_REQUEST=$(params["r_signer_wrapper_cosign.r.MAX_MANIFEST_DIGESTS_PER_SEARCH_REQUEST"])\
          r_signer_wrapper_cosign.r.settings.num_thread_pyxis=$(params["r_signer_wrapper_cosign.r.settings.num_thread_pyxis"])\
          r_signer_wrapper_cosign.r.settings.pyxis_ssl_key_file='"$(params["r_signer_wrapper_cosign.r.settings.pyxis_ssl_key_file"])"'\
          r_signer_wrapper_cosign.r.settings.pyxis_ssl_crt_file='"$(params["r_signer_wrapper_cosign.r.settings.pyxis_ssl_crt_file"])"'\
          r_signer_wrapper_cosign.r.settings.pyxis_server='"$(params["r_signer_wrapper_cosign.r.settings.pyxis_server"])"'\
          r_dst_quay_client.r.fake_manifests=$(params["r_dst_quay_client.r.fake_manifests"])\
          r_dst_quay_client.r.host='"$(params["r_dst_quay_client.r.host"])"'\
          r_dst_quay_client.r.password='"$(params["r_dst_quay_client.r.password"])"'\
          r_dst_quay_client.r.username='"$(params["r_dst_quay_client.r.username"])"'\
          i_snapshot_str.data='"$(params["i_snapshot_str.data"])"'\
          i_snapshot_file.data='"$(params["i_snapshot_file.data"])"'\
          i_signing_key.data='"$(params["i_signing_key.data"])"'\
          i_task_id.data=$(params["i_task_id.data"])\
          a_pool_size.a=$(params["a_pool_size.a"])\
          a_executor_type.a=$(params["a_executor_type.a"])
      echo "# Run stats:"
      cat $(workspaces.outputs.path)/root::stats
      echo "# Run state:"
      cat $(workspaces.outputs.path)/root::state
      export result=$(cat $(workspaces.outputs.path)/root::state |python -c "import json; import sys; print(json.load(sys.stdin))")
      [ "$result" = "finished" ] || exit 1
    workingDir: /
  workspaces:
  - name: outputs

