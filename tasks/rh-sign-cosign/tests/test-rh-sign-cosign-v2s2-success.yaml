---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: test-rh-sign-cosign-v2s2-success
spec:
  description: Test a scenario for successfull snapshot signing
  workspaces:
    - name: tests-workspace
  tasks:
    - name: setup
      workspaces:
        - name: outputs
          workspace: tests-workspace
      taskSpec:
        workspaces:
          - name: outputs
        steps:
          - name: setup-values
            image: quay.io/redhat-appstudio/release-service-utils:bc81bfed6062a386e48a76b252c6f33b52c411b0
            script: |
              #!/usr/bin/env sh
              set -eux

              cat > $(workspaces.outputs.path)/fake_entry_point_requests.json << EOF
              [{
                "args": [],
                "kwargs": {
                  "config_file": "/workspace/outputs/pubtools-sign.conf",
                  "digest": [
                    "sha256:4ae14305d98f00fbb981da3da0a8f48e205d04f1a7105f1c8b6f941892d48a29"
                  ],
                  "signing_key": "test_sig_key"
                }
              }]
              EOF
              cat $(workspaces.outputs.path)/fake_entry_point_requests.json
              cat > $(workspaces.outputs.path)/fake_entry_point_returns.json << EOF
              [{"signer_result": {"status": "ok"}}]
              EOF
              cat > $(workspaces.outputs.path)/fake_manifests.json << EOF
              {
                "registry.io/image0@sha256:0000": {
                    "application/vnd.docker.distribution.manifest.v2+json": "{\"schemaVersion\":2,\"mediaType\":\"application/vnd.docker.distribution.manifest.v2+json\",\"config\":{\"mediaType\":\"application/vnd.docker.container.image.v1+json\",\"size\":5830,\"digest\":\"sha256:5f88c70a8b703ed93f24c24a809f6c7838105642dd6fb0a19d1f873450304627\"},\"layers\":[{\"mediaType\":\"application/vnd.docker.image.rootfs.diff.tar.gzip\",\"size\":76421592,\"digest\":\"sha256:eae19a56e9c600eb0a59816d9d0ad7065824a34a13be60469084304fc7170334\"},{\"mediaType\":\"application/vnd.docker.image.rootfs.diff.tar.gzip\",\"size\":1811,\"digest\":\"sha256:be73321c79565b4e2fdf9f55ba6333e5d50a1bcf583db3b41be45a9be7d82431\"},{\"mediaType\":\"application/vnd.docker.image.rootfs.diff.tar.gzip\",\"size\":4280307,\"digest\":\"sha256:c06d2750af3cc462e5f8e34eccb0fdd350b28d8cd3b72b86bbf4d28e4a40e6ea\"},{\"mediaType\":\"application/vnd.docker.image.rootfs.diff.tar.gzip\",\"size\":9608840,\"digest\":\"sha256:457122c845c27bd616c9f80748f1fa19f3d69783957448b3eca30cea7ed9a0a0\"},{\"mediaType\":\"application/vnd.docker.image.rootfs.diff.tar.gzip\",\"size\":96318592,\"digest\":\"sha256:899560bde2837f603312932d5134a4bb3621e328797895233da54e9d5336911f\"}]}"
                }
              }
              EOF
              cat > $(workspaces.outputs.path)/snapshot_spec.json << EOF
              {
                "application": "myapp",
                "components": [
                  {
                    "name": "comp0",
                    "containerImage": "registry.io/image0@sha256:0000",
                    "repository": "quay.io/redhat-prod/myproduct----myrepo"
                  }
                ]
              }
              EOF
              cat > $(workspaces.outputs.path)/expected-signatures.json << EOF
              [
                {"arch": "",
                 "digest": "sha256:4ae14305d98f00fbb981da3da0a8f48e205d04f1a7105f1c8b6f941892d48a29",
                 "reference": null, 
                 "repo": "image0",
                 "signing_key": "test_sig_key"}
              ]
              EOF
              cat << EOF >> $(workspaces.outputs.path)/test-config-map
              apiVersion: v1
              kind: ConfigMap
              metadata:
                name: test-sign-config
              data:
                SIG_KEY: test_sig_key
                QUAY_HOST: test.com
                QUAY_USER: test-user
                QUAY_PASSWORD: test-password
                REKOR_URL: test.com
                UPLOAD_TLOG: "false"
                AWS_DEFAULT_REGION: test-region-1
                AWS_ACCESS_KEY_ID: test-key-id
                AWS_SECRET_ACCESS_KEY: test-key-secret
              EOF
              kubectl apply -f $(workspaces.outputs.path)/test-config-map
    - name: setup-signing-config
      taskRef:
        name: generate-cosign-sign-config
      workspaces:
        - name: outputs
          workspace: tests-workspace
      params:
        - name: config_map_name 
          value: 'test-sign-config'
      runAfter:
        - setup
    - name: run-task
      taskRef:
        name: cosign-sign-snapshot
      workspaces:
        - name: outputs
          workspace: tests-workspace
      params:
        - name: r_signer_wrapper_cosign.r.fake_entry_point_runs
          value: ''
        - name: r_signer_wrapper_cosign.r.fake_entry_point_returns
          value: '@$(workspaces.outputs.path)/fake_entry_point_returns.json'
        - name: r_signer_wrapper_cosign.r.fake_entry_point_requests
          value: '@$(workspaces.outputs.path)/fake_entry_point_requests.json'
        - name: r_signer_wrapper_cosign.r.config_file
          value: $(workspaces.outputs.path)/pubtools-sign.conf
        - name: r_signer_wrapper_cosign.r.MAX_MANIFEST_DIGESTS_PER_SEARCH_REQUEST
          value: ''
        - name: r_signer_wrapper_cosign.r.settings.num_thread_pyxis
          value: ''
        - name: r_signer_wrapper_cosign.r.settings.pyxis_ssl_key_file
          value: ''
        - name: r_signer_wrapper_cosign.r.settings.pyxis_ssl_crt_file
          value: ''
        - name: r_signer_wrapper_cosign.r.settings.pyxis_server
          value: ''
        - name: r_dst_quay_client.r.fake_manifests
          value: "@$(workspaces.outputs.path)/fake_manifests.json"
        - name: r_dst_quay_client.r.host
          value: $(tasks.setup-signing-config.results.quay_host)
        - name: r_dst_quay_client.r.password
          value: $(tasks.setup-signing-config.results.quay_password)
        - name: r_dst_quay_client.r.username
          value: $(tasks.setup-signing-config.results.quay_user)
        - name: i_snapshot_str.data
          value: '{\"application\":\"myapp\",\"components\":[{\"name\":\"comp0\",\"containerImage\":\"registry.io/image0@sha256:0000\",\"repository\":\"quay.io/redhat-prod/myproduct----myrepo\"}]}'
        - name: i_snapshot_file.data
          value: ''
        - name: i_signing_key.data
          value: $(tasks.setup-signing-config.results.sig_key)
        - name: i_task_id.data
          value: ''
        - name: a_pool_size.a
          value: ''
        - name: a_executor_type.a
          value: ''
      runAfter:
        - setup-signing-config
    - name: check-result
      workspaces:
        - name: outputs
          workspace: tests-workspace
      taskSpec:
        steps:
          - name: check-result
            image: quay.io/redhat-appstudio/release-service-utils:bc81bfed6062a386e48a76b252c6f33b52c411b0
            script: |
              #!/usr/bin/env python3
              import json
              expected_data = json.load(open("$(workspaces.outputs.path)/expected-signatures.json"))
              actual_data = json.load(open("$(workspaces.outputs.path)/root::o_sign_entries"))['data']
              print('expected')
              print(expected_data)
              print('----')
              print('actual')
              print(actual_data)
              assert expected_data == actual_data
              print("success")
      runAfter:
        - run-task

