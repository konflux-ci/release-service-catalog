---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: test-rh-sign-cosign-v2s2-success
  annotations:
    test/assert-task-failure: "run-task"
spec:
  description: Test a scenario for successfull snapshot signing
  workspaces:
    - name: tests-workspace
  tasks:
    - name: setup
      workspaces:
        - name: outputs
          workspace: tests-workspace
      taskSpec:
        workspaces:
          - name: outputs
        steps:
          - name: setup-values
            image: quay.io/redhat-appstudio/release-service-utils:bc81bfed6062a386e48a76b252c6f33b52c411b0
            script: |
              #!/usr/bin/env sh
              set -eux
              cat > $(workspaces.outputs.path)/snapshot_spec.json << EOF
              {
                "application": "myapp",
                "components": [
                  {
                    "name": "comp0",
                    "containerImage": "registry.io/image0@sha256:0000",
                    "repository": "quay.io/redhat-prod/myproduct----myrepo"
                  }
                ]
              }
              EOF
              cat > $(workspaces.outputs.path)/expected-signatures.yml << EOF
              name: o_sign_entries
              data: |
                data:
                - arch: '' 
                  digest: sha256:faa86fac2fa336fc1d22b5964b4cc0c1c5aed4b6898c801de64df88c2b18a2f3
                  reference: null 
                  repo: image0
                  signing_key: test-signing-key
              EOF
    - name: run-task
      taskRef:
        name: sign-snapshot
      workspaces:
        - name: outputs
          workspace: tests-workspace
      params:
        - name: r_signer_wrapper_cosign
          value: |-
            ---
              r:
                label: cosign_signer
                pre_push: false
                config_file: test-config-file
                settings: {}
                entry_point_requests:
                  - args: []
                    kwargs:
                      config_file: test-config-file
                      digest:
                        - sha256:faa86fac2fa336fc1d22b5964b4cc0c1c5aed4b6898c801de64df88c2b18a2f3
                      signing_key: test-signing-key
                entry_point_returns:
                  - signer_result:
                      status: ok
        - name: r_dst_quay_client
          value: |-
            ---
              r:
                username: 'test'
                password: 'password'
                host: "quay.io"
                manifests:
                  "registry.io/image0@sha256:0000":
                    "application/vnd.docker.distribution.manifest.v2+json": >
                      {
                        "schemaVersion": 2,
                        "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
                        "config": {
                            "mediaType": "application/vnd.docker.container.image.v1+json",
                            "size": 5830,
                            "digest": "sha256:5f88c70a8b703ed93f24c24a809f6c7838105642dd6fb0a19d1f873450304627"
                        },
                        "layers": [
                            {
                                "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                                "size": 76421592,
                                "digest": "sha256:eae19a56e9c600eb0a59816d9d0ad7065824a34a13be60469084304fc7170334"
                            },
                            {
                                "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                                "size": 1811,
                                "digest": "sha256:be73321c79565b4e2fdf9f55ba6333e5d50a1bcf583db3b41be45a9be7d82431"
                            },
                            {
                                "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                                "size": 4280307,
                                "digest": "sha256:c06d2750af3cc462e5f8e34eccb0fdd350b28d8cd3b72b86bbf4d28e4a40e6ea"
                            },
                            {
                                "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                                "size": 9608840,
                                "digest": "sha256:457122c845c27bd616c9f80748f1fa19f3d69783957448b3eca30cea7ed9a0a0"
                            },
                            {
                                "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                                "size": 96318592,
                                "digest": "sha256:899560bde2837f603312932d5134a4bb3621e328797895233da54e9d5336911f"
                            }]}
            
        - name: i_snapshot_str
          value: |-
            ---
              data: ""
        - name: i_snapshot_file
          value: |-
            ---
              data: "$(workspaces.outputs.path)/snapshot_spec.json"
        - name: i_signing_key
          value: |-
            ---
              data: 'test-signing-key'
        - name: i_task_id
          value: |-
            ---
              data: 1
        - name: a_pool_size
          value: |-
            ---
              a: 5
        - name: a_executor_type
          value: |-
            ---
              a: THREAD
      runAfter:
        - setup
    - name: check-result
      workspaces:
        - name: outputs
          workspace: tests-workspace
      taskSpec:
        steps:
          - name: check-result
            image: quay.io/redhat-appstudio/release-service-utils:bc81bfed6062a386e48a76b252c6f33b52c411b0
            script: |
              #!/usr/bin/env python3
              import yaml
              expected = yaml.safe_load(open("$(workspaces.outputs.path)/expected-signatures.yml"))
              expected_data = yaml.safe_load(expected['data'])
              actual = yaml.safe_load(open("$(workspaces.outputs.path)/root::o_sign_entries"))
              actual_data = yaml.safe_load(actual['data'])
              print('expected')
              print(expected_data)
              print('actual')
              print('----')
              print(actual_data)
              assert expected_data == actual_data
              print("success")
      runAfter:
        - run-task

