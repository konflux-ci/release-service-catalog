---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: test-collect-registry-token-secret
spec:
  description: |
    Run the collect-registry-token-secret task with the secret required
    (i.e. something is set to public=true)
    and verify that it will return the secret string.
  workspaces:
    - name: tests-workspace
  tasks:
    - name: setup
      workspaces:
        - name: data
          workspace: tests-workspace
      taskSpec:
        workspaces:
          - name: data
        steps:
          - name: setup-values
            image: quay.io/konflux-ci/release-service-utils:a5072c6da901bc9cf4d767da82e700784c7df981
            script: |
              #!/usr/bin/env sh
              set -eux

              cat > $(workspaces.data.path)/data.json << EOF
              {
                "mapping": {
                  "components": [
                    {
                      "name": "mycomponent1"
                    },
                    {
                      "name": "mycomponent2",
                      "public": true
                    }
                  ],
                  "defaults": {},
                  "registrySecret": "mysecret"
                }
              }
              EOF
    - name: run-task
      taskRef:
        name: collect-registry-token-secret
      params:
        - name: dataPath
          value: data.json
      workspaces:
        - name: data
          workspace: tests-workspace
      runAfter:
        - setup
    - name: check-result
      params:
        - name: secret
          value: $(tasks.run-task.results.registrySecret)
      taskSpec:
        params:
          - name: secret
        steps:
          - name: check-result
            image: quay.io/konflux-ci/release-service-utils:a5072c6da901bc9cf4d767da82e700784c7df981
            env:
              - name: "SECRET"
                value: '$(params.secret)'
            script: |
              #!/usr/bin/env sh
              set -eux

              test "$SECRET" = "mysecret"
