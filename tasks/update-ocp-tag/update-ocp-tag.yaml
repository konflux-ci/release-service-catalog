---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: update-ocp-tag
  labels:
    app.kubernetes.io/version: "1.4.0"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/tags: release
spec:
  description: >-
    Tekton task to update pull-spec tag with
    valid OCP version from get-ocp-version task.
  params:
    - name: dataPath
      description: Path to the JSON string of the merged data to use in the data workspace
      type: string
    - name: ocpVersion
      description: OCP version tag to replace the current set tags on index images
      type: string
  results:
    - name: updated-fromIndex
      type: string
      description: source Index image (catalog of catalogs) FBC fragment with updated tag
    - name: updated-targetIndex
      type: string
      description: Index image (catalog of catalogs) the FBC fragment will be added to with updated tag
    - name: updated-binaryImage
      type: string
      description: OCP binary image to be baked into the index image with updated tag
  workspaces:
    - name: data
      description: The workspace where the snapshot spec and data json files reside
  steps:
    - name: update-ocp-tag
      image: quay.io/konflux-ci/release-service-utils:e633d51cd41d73e4b3310face21bb980af7a662f
      script: |
       #!/usr/bin/env sh
       set -eu

        DATA_FILE="$(workspaces.data.path)/$(params.dataPath)"
        if [ ! -f "${DATA_FILE}" ] ; then
            echo "No data JSON was provided."
            exit 1
        fi

        # Function to replace tag in an image
        replace_tag() {
            local updatedImage="${1%:*}:$(params.ocpVersion)"
            echo "$updatedImage"
        }

        # Access the updated image
        updatedFromIndex=$(replace_tag "$(jq -r '.fbc.fromIndex' $DATA_FILE)")
        updatedTargetIndex=$(replace_tag "$(jq -r '.fbc.targetIndex' $DATA_FILE)")
        updatedBinaryImage=$(replace_tag "$(jq -r '.fbc.binaryImage' $DATA_FILE)")

        echo "Updated values"
        echo -n "$updatedFromIndex" | tee $(results.updated-fromIndex.path)
        echo
        echo -n "$updatedTargetIndex" | tee $(results.updated-targetIndex.path)
        echo
        echo -n "$updatedBinaryImage" | tee $(results.updated-binaryImage.path)
        echo
