---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: create-advisory-internal-request
  labels:
    app.kubernetes.io/version: "0.1.0"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/tags: release
spec:
  description: >-
    Tekton task to create an advisory via an InternalRequest
  params:
    - name: jsonKey
      type: string
      description: The json key containing the advisory data
      default: ".advisory"
    - name: releasePlanAdmissionPath
      type: string
      description: Path to the JSON string of the ReleasePlanAdmission in the data workspace
      default: "release_plan_admission.json"
    - name: snapshotPath
      type: string
      description: Path to the JSON string of the Snapshot spec in the data workspace
      default: "snapshot_spec.json"
    - name: dataPath
      type: string
      description: Path to the data JSON in the data workspace
      default: "data.json"
    - name: request
      type: string
      description: Type of request to be created
      default: "create-advisory"
    - name: synchronously
      type: string
      description: Whether the task should wait for InternalRequests to complete
      default: "true"
  workspaces:
    - name: data
      description: Workspace where the json files are stored
  steps:
    - name: run-script
      image: quay.io/hacbs-release/release-utils:6e92a6f8df8ef1cbecfb4c25b73ec6d92bded527
      script: |
        #!/bin/sh
        #
        #
        set -e

        # Obtain application from snapshot
        application=$(jq -rc .application $(workspaces.data.path)/$(params.snapshotPath))

        # Obtain origin workspace from releasePlanAdmission
        origin=$(jq -rc '.spec.origin' $(workspaces.data.path)/$(params.releasePlanAdmissionPath))

        # Extract the advisory key from the data JSON file
        advisoryData=$(jq -c "$(params.jsonKey)" $(workspaces.data.path)/$(params.dataPath))

        echo "Creating InternalRequest to create advisory..."
        internal-request -r "$(params.request)" \
                         -p application="${application}" \
                         -p origin="${origin}" \
                         -p advisory_json="${advisoryData}" \
                         -s "$(params.synchronously)" \
                         > $(workspaces.data.path)/ir-result.txt || \
                         (grep "^\[" $(workspaces.data.path)/ir-result.txt | jq . && exit 1)
        
        internalRequest=$(awk 'NR==1{ print $2 }' $(workspaces.data.path)/ir-result.txt | xargs)
        echo "done (${internalRequest})"

        results=$(kubectl get internalrequest $internalRequest -o=jsonpath='{.status.results}')
        if [[ "$(echo ${results} | jq -r '.result')" == "Success" ]]; then
          echo "Advisory created"
        else
          echo "Advisory creation failed"
          echo "$results"
          exit 1
        fi
