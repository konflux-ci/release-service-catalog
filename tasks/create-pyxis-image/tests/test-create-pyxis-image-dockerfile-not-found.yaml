---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: test-create-pyxis-image-dockerfile-not-found
spec:
  description: |
    Run the create-pyxis-image task with a single containerImage in the snapshot.
    Dockerfile artifact does not exist for this image, so oras pull will fail
    and create_container_image will be called with an empty dockerfile path.
  workspaces:
    - name: tests-workspace
  tasks:
    - name: setup
      workspaces:
        - name: data
          workspace: tests-workspace
      taskSpec:
        workspaces:
          - name: data
        steps:
          - name: setup-values
            image: quay.io/konflux-ci/release-service-utils:65d8db844c008e7736ec8dff307868525279484d
            script: |
              #!/usr/bin/env sh
              set -eux

              cat > $(workspaces.data.path)/mapped_snapshot.json << EOF
              {
                "application": "myapp",
                "components": [
                  {
                    "name": "comp",
                    "containerImage": "dockerfile-not-found@sha256:abcdef1234",
                    "repository": "registry.io/image",
                    "tags": [
                      "testtag"
                    ]
                  }
                ]
              }
              EOF
    - name: run-task
      taskRef:
        name: create-pyxis-image
      params:
        - name: pyxisSecret
          value: test-create-pyxis-image-cert
        - name: server
          value: stage
        - name: snapshotPath
          value: mapped_snapshot.json
      workspaces:
        - name: data
          workspace: tests-workspace
      runAfter:
        - setup
    - name: check-result
      params:
        - name: pyxisDataPath
          value: $(tasks.run-task.results.pyxisDataPath)
      workspaces:
        - name: data
          workspace: tests-workspace
      taskSpec:
        params:
          - name: pyxisDataPath
            type: string
        workspaces:
          - name: data
        steps:
          - name: check-result
            image: quay.io/konflux-ci/release-service-utils:65d8db844c008e7736ec8dff307868525279484d
            script: |
              #!/usr/bin/env sh
              set -eux

              if [ $(cat $(workspaces.data.path)/mock_create_container_image.txt | wc -l) != 1 ]; then
                echo Error: create_container_image was expected to be called 1 time. Actual calls:
                cat $(workspaces.data.path)/mock_create_container_image.txt
                exit 1
              fi

              if [ -f $(workspaces.data.path)/mock_cleanup_tags.txt ]; then
                echo Error: cleanup_tags was not expected to be called. Actual calls:
                cat $(workspaces.data.path)/mock_cleanup_tags.txt
                exit 1
              fi

              if ! grep -- "--tags testtag" < $(workspaces.data.path)/mock_create_container_image.txt 2> /dev/null
              then
                echo Error: create_container_image call was expected to include "--tags testtag". Actual call:
                cat $(workspaces.data.path)/mock_create_container_image.txt
                exit 1
              fi

              if ! grep -- "--rh-push false" < $(workspaces.data.path)/mock_create_container_image.txt 2> /dev/null
              then
                echo Error: create_container_image call was expected to include "--rh-push false". Actual call:
                cat $(workspaces.data.path)/mock_create_container_image.txt
                exit 1
              fi

              if [ $(cat $(workspaces.data.path)/mock_skopeo.txt | wc -l) != 1 ]; then
                echo Error: skopeo was expected to be called 1 time. Actual calls:
                cat $(workspaces.data.path)/mock_skopeo.txt
                exit 1
              fi

              if [ "$(wc -l < "$(workspaces.data.path)/mock_oras.txt")" != 2 ]; then
                echo Error: oras was expected to be called 2 times. Actual calls:
                cat "$(workspaces.data.path)/mock_oras.txt"
                exit 1
              fi

              [ "$(cat $(workspaces.data.path)/mock_skopeo.txt | head -n 1)" \
                = "inspect --raw docker://registry.io/image@sha256:abcdef1234" ]

              # check if the correct arch and image id are set in the json file
              jq -e '.components[0].pyxisImages[0] | ( .arch == "amd64" ) and ( .imageId == "0001" )
                and ( .os == "linux" )' $(workspaces.data.path)/$(params.pyxisDataPath)

              if [ "$(wc -l < "$(workspaces.data.path)/mock_select-oci-auth.txt")" != 2 ]; then
                echo Error: select-oci-with was expected to be called 2 times. Actual calls:
                cat "$(workspaces.data.path)/mock_select-oci-auth.txt"
                exit 1
              fi

      runAfter:
        - run-task
