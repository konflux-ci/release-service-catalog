---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: test-create-pyxis-image-multiple-containerimages
spec:
  description: |
    Run the create-pyxis-image task with multiple containerImages in the snapshot.
  workspaces:
    - name: tests-workspace
  tasks:
    - name: setup
      workspaces:
        - name: data
          workspace: tests-workspace
      taskSpec:
        workspaces:
          - name: data
        steps:
          - name: setup-values
            image: quay.io/hacbs-release/release-utils:85ab98a7ec63c3d8d9ec3c4982ff0e581bcb3c83
            script: |
              #!/usr/bin/env sh
              set -eux

              cat > $(workspaces.data.path)/mapped_snapshot.json << EOF
              {
                "application": "myapp",
                "components": [
                  {
                    "name": "comp1",
                    "containerImage": "source1@mydigest1",
                    "repository": "registry.io/image1"
                  },
                  {
                    "name": "comp2",
                    "containerImage": "source2@mydigest2",
                    "repository": "registry.io/image2"
                  },
                  {
                    "name": "comp3",
                    "containerImage": "source3@mydigest3",
                    "repository": "registry.io/image3"
                  }
                ]
              }
              EOF

              cat > $(workspaces.data.path)/data.json << EOF
              {
                "images": {
                  "defaultTag": "testtag"
                }
              }
              EOF
    - name: run-task
      taskRef:
        name: create-pyxis-image
      params:
        - name: pyxisSecret
          value: test-create-pyxis-image-cert
        - name: server
          value: stage
      workspaces:
        - name: data
          workspace: tests-workspace
      runAfter:
        - setup
    - name: check-result
      workspaces:
        - name: data
          workspace: tests-workspace
      taskSpec:
        workspaces:
          - name: data
        steps:
          - name: check-result
            image: quay.io/hacbs-release/release-utils:85ab98a7ec63c3d8d9ec3c4982ff0e581bcb3c83
            script: |
              #!/usr/bin/env sh
              set -eux

              if [ $(cat $(workspaces.data.path)/mock_create_container_image.txt | wc -l) != 3 ]; then
                echo Error: create_container_image was expected to be called 3 times. Actual calls:
                cat $(workspaces.data.path)/mock_create_container_image.txt
                exit 1
              fi

              cat > $(workspaces.data.path)/skopeo_expected_calls.txt << EOF
              inspect --raw docker://registry.io/image1@mydigest1
              inspect --no-tags docker://registry.io/image1@mydigest1
              inspect --raw docker://registry.io/image2@mydigest2
              inspect --no-tags docker://registry.io/image2@mydigest2
              inspect --raw docker://registry.io/image3@mydigest3
              inspect --no-tags docker://registry.io/image3@mydigest3
              EOF

              # check that the actual calls match the expected calls
              if [ "$(cat $(workspaces.data.path)/skopeo_expected_calls.txt | md5sum)" \
                != "$(cat $(workspaces.data.path)/mock_skopeo.txt | md5sum)" ]
              then
                echo Error: Actual skopeo calls do not match expected calls.
                echo Expected calls:
                cat $(workspaces.data.path)/skopeo_expected_calls.txt
                echo Actual calls:
                cat $(workspaces.data.path)/mock_skopeo.txt
                exit 1
              fi
      runAfter:
        - run-task
