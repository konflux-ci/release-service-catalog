---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: test-populate-release-notes-images-single-image-comp-tags
spec:
  description: |
    Run the populate-release-notes-images task with a single image in the snapshot JSON that has
    tags in the snapshot and verify the data JSON has the proper content, using the tags from
    the snapshot instead of the commonTags
  workspaces:
    - name: tests-workspace
  tasks:
    - name: setup
      workspaces:
        - name: data
          workspace: tests-workspace
      taskSpec:
        workspaces:
          - name: data
        steps:
          - name: setup
            image: quay.io/konflux-ci/release-service-utils:38c3bfd7479c86b832cba5b61f9bbde40c469393
            script: |
              #!/usr/bin/env sh
              set -eux

              cat > $(workspaces.data.path)/data.json << EOF
              {
                "releaseNotes": {
                  "product_id": 123,
                  "product_name": "Red Hat Openstack Product",
                  "product_version": "123",
                  "cpe": "cpe:/a:example:openstack:el8",
                  "type": "RHSA",
                  "issues": {
                    "fixed": [
                      {
                        "id": "RHOSP-12345",
                        "source": "issues.example.com"
                      },
                      {
                        "id": 1234567,
                        "source": "bugzilla.example.com"
                      }
                    ]
                  },
                  "synopsis": "test synopsis",
                  "topic": "test topic",
                  "description": "test description",
                  "solution": "test solution",
                  "references": [
                    "https://docs.example.com/some/example/release-notes"
                  ]
                }
              }
              EOF

              cat > $(workspaces.data.path)/snapshot.json << EOF
              {
                "application": "myapp",
                "components": [
                  {
                    "name": "comp",
                    "containerImage": "registry.io/image@sha256:123456",
                    "repository": "quay.io/redhat-prod/product----repo",
                    "tags": [
                      "foo",
                      "bar"
                    ]
                  }
                ]
              }
              EOF
    - name: run-task
      taskRef:
        name: populate-release-notes-images
      params:
        - name: dataPath
          value: "data.json"
        - name: snapshotPath
          value: "snapshot.json"
        - name: commonTags
          value: "notused"
      workspaces:
        - name: data
          workspace: tests-workspace
      runAfter:
        - setup
    - name: check-result
      workspaces:
        - name: data
          workspace: tests-workspace
      taskSpec:
        workspaces:
          - name: data
        steps:
          - name: check-result
            image: quay.io/konflux-ci/release-service-utils:38c3bfd7479c86b832cba5b61f9bbde40c469393
            script: |
              #!/usr/bin/env sh
              set -eux

              imagearch1=$(jq '.releaseNotes.content.images[0]' "$(workspaces.data.path)/data.json")
              test $(jq -r '.architecture' <<< $imagearch1) == "amd64"
              test $(jq -r '.containerImage' <<< $imagearch1) == "registry.redhat.io/product/repo@sha256:abcdefg"
              test $(jq -r '.purl' <<< $imagearch1) == \
                "pkg:oci/repo@sha256%3Aabcdefg?arch=amd64&repository_url=registry.redhat.io/product"
              test $(jq -r '.repository' <<< $imagearch1) == "registry.redhat.io/product/repo"
              test $(jq -rc '.tags' <<< $imagearch1) == '["foo","bar"]'

              imagearch2=$(jq '.releaseNotes.content.images[1]' "$(workspaces.data.path)/data.json")
              test $(jq -r '.architecture' <<< $imagearch2) == "s390x"
              test $(jq -r '.containerImage' <<< $imagearch2) == "registry.redhat.io/product/repo@sha256:deadbeef"
              test $(jq -r '.purl' <<< $imagearch2) == \
                "pkg:oci/repo@sha256%3Adeadbeef?arch=s390x&repository_url=registry.redhat.io/product"
              test $(jq -r '.repository' <<< $imagearch2) == "registry.redhat.io/product/repo"
              test $(jq -rc '.tags' <<< $imagearch2) == '["foo","bar"]'
      runAfter:
        - run-task
