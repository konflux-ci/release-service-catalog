---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: collect-collectors-resources
  labels:
    app.kubernetes.io/version: "0.2.0"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/tags: release
spec:
  description: Tekton task to collect the information related to collectors
  params:
    - name: previousRelease
      type: string
      description: The namespaced name of the previous Release
    - name: release
      type: string
      description: The namespaced name of the Release
    - name: collectorsResourceType
      description: The type of resource that contains the collectors
      type: string
      default: releaseplan
    - name: collectorsResource
      description: |
        The namespaced name of the resource that contains the collectors
      type: string
    - name: subdirectory
      description: Subdirectory inside the workspace to be used
      type: string
      default: ""
  workspaces:
    - name: data
      description: Workspace to save the CR jsons to
  results:
    - name: previousRelease
      type: string
      description: The relative path in the workspace to the stored previous release json
    - name: release
      type: string
      description: The relative path in the workspace to the stored release json
    - name: collectorsResource
      type: string
      description: The relative path in the workspace to the stored collectors resource json
    - name: resultsDir
      type: string
      description: The relative path in the workspace to the results directory
  steps:
    - name: collect-collectors-resources
      image: quay.io/konflux-ci/release-service-utils:e633d51cd41d73e4b3310face21bb980af7a662f
      env:
        - name: "PREVIOUS_RELEASE"
          value: '$(params.previousRelease)'
        - name: "RELEASE"
          value: '$(params.release)'
        - name: "COLLECTORS_RESOURCE_TYPE"
          value: '$(params.collectorsResourceType)'
        - name: "COLLECTORS_RESOURCE"
          value: '$(params.collectorsResource)'
      script: |
        #!/usr/bin/env bash
        set -exo pipefail

        RESULTS_DIR_PATH="results"
        if [ -n "$(params.subdirectory)" ]; then
          mkdir -p "$(workspaces.data.path)/$(params.subdirectory)"
          RESULTS_DIR_PATH="$(params.subdirectory)/results"
        fi

        mkdir "$(workspaces.data.path)/$RESULTS_DIR_PATH"
        echo -n "$RESULTS_DIR_PATH" > "$(results.resultsDir.path)"

        PREVIOUS_RELEASE_PATH="$(params.subdirectory)/previous_release.json"
        echo -n "$PREVIOUS_RELEASE_PATH" > "$(results.previousRelease.path)"
        get-resource "release" "${PREVIOUS_RELEASE}" | tee "$(workspaces.data.path)/$PREVIOUS_RELEASE_PATH"
        
        RELEASE_PATH="$(params.subdirectory)/release.json"
        echo -n "$RELEASE_PATH" > "$(results.release.path)"
        get-resource "release" "${RELEASE}" | tee "$(workspaces.data.path)/$RELEASE_PATH"

        COLLECTORS_RESOURCE_PATH="$(params.subdirectory)/collectors_resource.json"
        echo -n "$COLLECTORS_RESOURCE_PATH" > "$(results.collectorsResource.path)"
        get-resource "${COLLECTORS_RESOURCE_TYPE}" "${COLLECTORS_RESOURCE}" | \
          tee "$(workspaces.data.path)/$COLLECTORS_RESOURCE_PATH"