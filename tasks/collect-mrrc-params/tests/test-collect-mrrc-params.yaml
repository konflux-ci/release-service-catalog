---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: test-collect-mrrc-params
spec:
  description: |
    Run the collect-mrrc-params task
  workspaces:
    - name: tests-workspace
  tasks:
    - name: setup
      workspaces:
        - name: data
          workspace: tests-workspace
      taskSpec:
        steps:
          - name: setup-values
            image: quay.io/konflux-ci/release-service-utils:e633d51cd41d73e4b3310face21bb980af7a662f
            script: |
              #!/usr/bin/env sh
              set -eux

              cat > "$(workspaces.data.path)/data.json" << EOF
              {
                "releaseNotes": {
                  "product_name": "test",
                  "product_version": "0.0.1"
                },
                "mrrc": {
                  "charonConfig":"charon-config",
                  "awsSecret": "charon-aws-credentials",
                  "environment": "dev",
                  "release": "ga"
                }
              }
              EOF

              cat > "$(workspaces.data.path)/snapshot.json" << EOF
              {
                "application": "test",
                "components": [
                  {
                    "containerImage": "quay.io/test/test.zip@sha256:02b0c8aadf2b7c69",
                    "name": "test-0.0.1"
                  }
                ]
              }
              EOF
    - name: run-task
      taskRef:
        name: collect-mrrc-params
      params:
        - name: dataJsonPath
          value: data.json
        - name: snapshotPath
          value: snapshot.json
      workspaces:
        - name: data
          workspace: tests-workspace
      runAfter:
        - setup
    - name: check-result
      workspaces:
        - name: data
          workspace: tests-workspace
      params:
        - name: mrrcParamFilePath
          value: $(tasks.run-task.results.mrrcParamFilePath)
        - name: charonConfigFilePath
          value: $(tasks.run-task.results.charonConfigFilePath)
        - name: charonAWSSecret
          value: $(tasks.run-task.results.charonAWSSecret)
      taskSpec:
        params:
          - name: mrrcParamFilePath
          - name: charonConfigFilePath
          - name: charonAWSSecret
        steps:
          - name: check-result
            image: quay.io/konflux-ci/release-service-utils:e633d51cd41d73e4b3310face21bb980af7a662f
            script: |
              #!/usr/bin/env sh
              set -eux

              test "$(params.charonAWSSecret)" == "charon-aws-credentials"

              MRRC_FILE="$(workspaces.data.path)/$(params.mrrcParamFilePath)"
              test -f "$MRRC_FILE"

              . "$MRRC_FILE"
              test "$MRRC_ZIP_REGISTRY" == "quay.io/test/test.zip@sha256:02b0c8aadf2b7c69"
              test "$MRRC_TARGET" == "dev-maven-ga"
              test "$MRRC_PRODUCT_NAME" == "test"
              test "$MRRC_PRODUCT_VERSION" == "0.0.1"

              CHARON_CFG_FILE="$(workspaces.data.path)/$(params.charonConfigFilePath)"
              test -f "$CHARON_CFG_FILE"
              CHARON_CFG=$(cat "$CHARON_CFG_FILE")
              test "$CHARON_CFG" == "charon-config"
      runAfter:
        - run-task
