---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  labels:
    app.kubernetes.io/version: "0.7.0"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/tags: "release"
  name: slack-webhook-notification
spec:
  description: >-
    Sends message to slack using incoming webhook
  params:
    - name: message
      description: Message to be sent
    - name: dataJsonPath
      description: path to data json file
    - name: secretName
      description: |
        Name of secret which contains key/value pairs of `<team>/<webhook url>`. 
        e.g. team1=https://hooks.slack.com/services/XXX/XXXXXX
      default: slack-webhook-notification-secret
  volumes:
    - name: webhook-secret
      secret:
        secretName: $(params.secretName)
  steps:
    - name: send-message
      image: >-
        quay.io/konflux-ci/release-service-utils:e633d51cd41d73e4b3310face21bb980af7a662f
      volumeMounts:
        - name: webhook-secret
          mountPath: "/etc/secrets"
          readOnly: true
      env:
        - name: HOME
          value: /tekton/home
        - name: MESSAGE
          value: $(params.message)
      script: |
        #!/usr/bin/env bash

        # get keyName from Data
        echo "data location : $(params.dataJsonPath)"
        echo "data content  :"
        cat "$(params.dataJsonPath)"
        echo ""
        # See https://stackoverflow.com/a/56205949 to handle empty value or missing field
        keyName=$(cat "$(params.dataJsonPath)" | jq -r '."slack-webhook-notification-secret-keyname" // empty')
        echo "keyName: ${keyName}"

        if [ "${keyName}" == "" ] ; then
          echo "No secret key name provided via 'slack-webhook-notification-secret-keyname' key in Data."
          echo "No message will be sent."
          exit 0
        fi

        if [ -f "/etc/secrets/$keyName" ]; then
          WEBHOOK_URL=$(cat "/etc/secrets/$keyName")
        else
          echo "Secret not defined properly"
          exit 1
        fi
        curl -X POST -H 'Content-type: application/json' --data "{\"username\": \"RHTAP Release Service\", \
          \"text\":\"$MESSAGE\"}" $WEBHOOK_URL
  workspaces:
    - name: data
      description: The workspace where the data json file resides
