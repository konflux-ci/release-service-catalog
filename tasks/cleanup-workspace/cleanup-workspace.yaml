---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: cleanup-workspace
  labels:
    app.kubernetes.io/version: "0.8.2"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/tags: release
spec:
  description: >-
    Tekton task to delete a given directory in a passed workspace
  params:
    - name: subdirectory
      type: string
      description: The directory to remove within the workspace
    - name: delay
      type: string
      default: 60
      description: Time in seconds to delay the cleanup action
    - name: pipelineRunUid
      type: string
      default: ""
      description: The uid of the current pipelineRun. It is only available at the pipeline level
  workspaces:
    - name: input
      description: Workspace where the directory to cleanup exists
  steps:
    - name: cleanup
      image: quay.io/konflux-ci/release-service-utils:e633d51cd41d73e4b3310face21bb980af7a662f
      script: |
        #!/usr/bin/env bash
        set -eux

        if [ -n "$(params.pipelineRunUid)" ] ; then
            # Cleanup all internalrequests, but only if internalrequests exist on cluster
            if kubectl api-resources | grep InternalRequest | grep appstudio.redhat.com ; then
              kubectl delete internalrequest \
                  -l internal-services.appstudio.openshift.io/pipelinerun-uid="$(params.pipelineRunUid)"
            else
              echo "CRD internalrequests.appstudio.redhat.com not found on cluster"
            fi
        fi

        if [ -z "$(params.subdirectory)" ] ; then
            echo "The empty string is not a valid subdirectory"
            exit 0
        fi

        echo "Delaying execution by $(params.delay) seconds"
        sleep "$(params.delay)"

        CLEANUP_DIR="$(workspaces.input.path)/$(params.subdirectory)"

        if [ -d "${CLEANUP_DIR}" ] ; then
          # Delete a directory and its contents
          rm -rf "${CLEANUP_DIR}"
        fi
