---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: create-product-sbom
  labels:
    app.kubernetes.io/version: "0.2.0"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/tags: release
spec:
  description: >-
    Create product-level SBOM from release notes.
  params:
    - name: dataJsonPath
      description: Relative path to the JSON data file in the workspace.
      type: string
  workspaces:
    - name: data
      description: Workspace to save the product-level SBOM to.
  results:
    - name: productSBOMPath
      description: >-
        Relative path to the directory containing the created product-level SBOM
        in the data workspace.
  steps:
    - name: create-sbom
      image: quay.io/konflux-ci/release-service-utils:c7e14c3521e37e99f407e11d6f7f1b15f1b3ec01
      script: |
        #!/usr/bin/env bash
        set -eux

        tmp_sbom="$(mktemp)"
        create_product_sbom --data-path "$(workspaces.data.path)/$(params.dataJsonPath)" \
          --output-path "$tmp_sbom"

        product_name="$(jq -r '.packages[0].name' "$tmp_sbom")"
        product_version="$(jq -r '.packages[0].versionInfo' "$tmp_sbom")"

        # Replace whitespace with dashes
        normalized_name="$(echo -n "${product_name}" | tr '[:space:]' '-')"

        sbom_dir="product-sboms"
        # the combination of name + version is later used as an ID in Atlas
        sbom_path="${sbom_dir}/${normalized_name}-${product_version}.json"

        # takes into account the subdirectory of the data.json if any
        subdir_sbom_path="$(dirname "$(params.dataJsonPath)")/${sbom_path}"

        output_path=$(workspaces.data.path)/${subdir_sbom_path}
        mkdir -p "$(dirname "$output_path")"
        cp "$tmp_sbom" "$output_path"

        echo -n "$(dirname "$subdir_sbom_path")" > "$(results.productSBOMPath.path)"
