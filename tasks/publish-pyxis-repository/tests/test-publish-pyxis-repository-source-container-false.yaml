---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: test-publish-pyxis-repository-source-container-false
spec:
  description: |
    Run the publish-pyxis-repository task with a single component and pushSourceContainer
    set to false in the data JSON.
  workspaces:
    - name: tests-workspace
  tasks:
    - name: setup
      workspaces:
        - name: data
          workspace: tests-workspace
      taskSpec:
        workspaces:
          - name: data
        steps:
          - name: setup-values
            image: quay.io/redhat-appstudio/release-service-utils:bc81bfed6062a386e48a76b252c6f33b52c411b0
            script: |
              #!/usr/bin/env sh
              set -eux

              cat > $(workspaces.data.path)/snapshot_spec.json << EOF
              {
                "application": "my-app",
                "components": [
                  {
                    "repository": "quay.io/redhat-prod/my-product----my-image1"
                  }
                ]
              }
              EOF

              cat > $(workspaces.data.path)/data.json << EOF
              {
                "images": {
                  "pushSourceContainer": "false"
                }
              }
              EOF
    - name: run-task
      taskRef:
        name: publish-pyxis-repository
      params:
        - name: pyxisSecret
          value: test-publish-pyxis-repository-cert
        - name: snapshotPath
          value: snapshot_spec.json
        - name: dataPath
          value: data.json          
      workspaces:
        - name: data
          workspace: tests-workspace
      runAfter:
        - setup
    - name: check-result
      workspaces:
        - name: data
          workspace: tests-workspace
      taskSpec:
        workspaces:
          - name: data
        steps:
          - name: check-result
            image: quay.io/redhat-appstudio/release-service-utils:bc81bfed6062a386e48a76b252c6f33b52c411b0
            script: |
              #!/usr/bin/env sh
              set -eux

              if [ $(cat $(workspaces.data.path)/mock_curl.txt | wc -l) != 2 ]; then
                  echo Error: curl was expected to be called 2 times. Actual calls:
                  cat $(workspaces.data.path)/mock_curl.txt
                  exit 1
              fi

              [[ $(cat $(workspaces.data.path)/mock_curl.txt | head -n 1) \
                  == *"/my-product/my-image1 "* ]]
              [[ $(cat $(workspaces.data.path)/mock_curl.txt | tail -n 1) \
                  == *"/id/1 "* ]]
              [[ $(cat $(workspaces.data.path)/mock_curl.txt | tail -n 1) \
                  != *'{"source_container_image_enabled":true}' ]]
      runAfter:
        - run-task
