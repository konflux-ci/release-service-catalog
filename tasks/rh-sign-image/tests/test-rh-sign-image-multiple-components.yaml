---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: test-rh-sign-image-multiple-components
spec:
  description: Test creating internal requests to sign images
  workspaces:
    - name: tests-workspace
  tasks:
    - name: setup
      workspaces:
        - name: data
          workspace: tests-workspace
      taskSpec:
        workspaces:
          - name: data
        steps:
          - name: setup-values
            image: quay.io/konflux-ci/release-service-utils:38c3bfd7479c86b832cba5b61f9bbde40c469393
            script: |
              #!/usr/bin/env sh
              set -eux

              cat > $(workspaces.data.path)/snapshot_spec.json << EOF
              {
                "application": "myapp",
                "components": [
                  {
                    "name": "comp0",
                    "containerImage": "registry.io/image0@sha256:0000",
                    "repository": "quay.io/redhat-pending/prod----repo0",
                    "tags": [
                      "some-prefix-12345",
                      "some-prefix"
                    ]
                  },
                  {
                    "name": "comp1",
                    "containerImage": "registry.io/image1@sha256:0001",
                    "repository": "quay.io/redhat-pending/prod----repo1",
                    "tags": [
                      "some-prefix-12345",
                      "some-prefix"
                    ]
                  },
                  {
                    "name": "comp2",
                    "containerImage": "registry.io/image2@sha256:0002",
                    "repository": "quay.io/redhat-pending/prod----repo2",
                    "tags": [
                      "some-prefix-12345",
                      "some-prefix"
                    ]
                  }
                ]
              }
              EOF

              cat > $(workspaces.data.path)/data.json << EOF
              {
                "sign": {
                  "request": "hacbs-signing-pipeline",
                  "configMapName": "signing-config-map"
                }
              }
              EOF
    - name: run-task
      taskRef:
        name: rh-sign-image
      params:
        - name: requester
          value: testuser-multiple
        - name: pipelineRunUid
          value: $(context.pipelineRun.uid)
        - name: snapshotPath
          value: snapshot_spec.json
        - name: dataPath
          value: data.json
      workspaces:
        - name: data
          workspace: tests-workspace
      runAfter:
        - setup
    - name: check-result
      workspaces:
        - name: data
          workspace: tests-workspace
      taskSpec:
        steps:
          - name: check-result
            image: quay.io/konflux-ci/release-service-utils:38c3bfd7479c86b832cba5b61f9bbde40c469393
            script: |
              #!/usr/bin/env sh
              set -eux

              internalRequests="$(kubectl get internalrequest -o json --sort-by=.metadata.creationTimestamp | jq -c)"
              irsLength=$(jq ".items | length" <<< "${internalRequests}" )

              for((ir=0; ir<irsLength; ir++)); do
                params=$(jq -r ".items[$ir].spec.params" <<< "${internalRequests}")
                i=$((ir/4))
                if [ $((ir%4)) -eq 0 ]; then
                  if [ $(jq -r '.reference' <<< "${params}") \
                      != "registry.stage.redhat.io/prod/repo${i}:some-prefix-12345" ]; then
                    echo "fixed tag redhat.io reference does not match"
                    exit 1
                  fi
                elif [ $((ir%4)) -eq 1 ]; then
                  if [ $(jq -r '.reference' <<< "${params}") \
                      != "registry.access.stage.redhat.com/prod/repo${i}:some-prefix-12345" ]; then
                    echo "fixed tag access.redhat.com reference does not match"
                    exit 1
                  fi
                elif [ $((ir%4)) -eq 2 ]; then
                  if [ $(jq -r '.reference' <<< "${params}") \
                      != "registry.stage.redhat.io/prod/repo${i}:some-prefix" ]; then
                    echo "floating tag redhat.io reference does not match"
                    exit 1
                  fi
                else
                  if [ $(jq -r '.reference' <<< "${params}") \
                      != "registry.access.stage.redhat.com/prod/repo${i}:some-prefix" ]; then
                    echo "floating tag access.redhat.com reference does not match"
                    exit 1
                  fi
                fi

                if [ $(jq -r '.manifest_digest' <<< "${params}") != "sha256:000${i}" ]; then
                  echo "manifest_digest does not match"
                  exit 1
                fi

                if [ $(jq -r '.config_map_name' <<< "${params}") != "signing-config-map" ]
                then
                  echo "config_map_name does not match"
                  exit 1
                fi

                if [ $(jq -r '.requester' <<< "${params}") != "testuser-multiple" ]
                then
                  echo "requester does not match"
                  exit 1
                fi

                if [ $(jq -r '.pipeline_image' <<< "${params}") != \
                  "quay.io/redhat-isv/operator-pipelines-images:released" ]
                then
                  echo "pipeline_image does not match"
                  exit 1
                fi
              done
      runAfter:
        - run-task
  finally:
    - name: cleanup
      taskSpec:
        steps:
          - name: delete-crs
            image: quay.io/konflux-ci/release-service-utils:38c3bfd7479c86b832cba5b61f9bbde40c469393
            script: |
              #!/usr/bin/env sh
              set -eux

              kubectl delete internalrequests --all
