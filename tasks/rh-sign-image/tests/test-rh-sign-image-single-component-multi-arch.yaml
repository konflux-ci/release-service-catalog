---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: test-rh-sign-image-single-component-multi-arch
spec:
  description: Test creating a internal request to sign a multi-arch image
  workspaces:
    - name: tests-workspace
  tasks:
    - name: setup
      workspaces:
        - name: data
          workspace: tests-workspace
      taskSpec:
        workspaces:
          - name: data
        steps:
          - name: setup-values
            image: quay.io/konflux-ci/release-service-utils:e633d51cd41d73e4b3310face21bb980af7a662f
            script: |
              #!/usr/bin/env sh
              set -eux

              cat > $(workspaces.data.path)/snapshot_spec.json << EOF
              {
                "application": "myapp",
                "components": [
                  {
                    "name": "comp0",
                    "containerImage": "registry.io/multi-arch-image0@sha256:0000",
                    "repository": "quay.io/redhat-prod/myproduct----myrepo",
                    "tags": [
                      "some-prefix-12345",
                      "some-prefix"
                    ]
                  }
                ]
              }
              EOF

              cat > $(workspaces.data.path)/data.json << EOF
              {
                "sign": {
                  "request": "hacbs-signing-pipeline",
                  "configMapName": "signing-config-map"
                }
              }
              EOF
    - name: run-task
      taskRef:
        name: rh-sign-image
      params:
        - name: requester
          value: testuser-single
        - name: pipelineRunUid
          value: $(context.pipelineRun.uid)
        - name: snapshotPath
          value: snapshot_spec.json
        - name: dataPath
          value: data.json
      workspaces:
        - name: data
          workspace: tests-workspace
      runAfter:
        - setup
    - name: check-result
      workspaces:
        - name: data
          workspace: tests-workspace
      taskSpec:
        steps:
          - name: check-result
            image: quay.io/konflux-ci/release-service-utils:e633d51cd41d73e4b3310face21bb980af7a662f
            script: |
              #!/usr/bin/env bash
              set -eux

              counter=0
              # first 4 are for manifest list digest for both registry.redhat.io
              #      and registry.access.redhat.com
              # 5-6 are for the 1st arch and registry.redhat.io
              # 7-8 are for the 1st arch and registry.access.redhat.com
              # 9-10 are for the 2nd arch and registry.redhat.io
              # 11-12 are for the 2nd arch and registry.access.redhat.com
              testValues=('sha256:0000' \
                          'sha256:0000' \
                          'sha256:0000' \
                          'sha256:0000' \
                          'sha256:6f9a420f660e73a' \
                          'sha256:6f9a420f660e73a' \
                          'sha256:6f9a420f660e73a' \
                          'sha256:6f9a420f660e73a' \
                          'sha256:6f9a420f660e73b' \
                          'sha256:6f9a420f660e73b' \
                          'sha256:6f9a420f660e73b' \
                          'sha256:6f9a420f660e73b')

              internalRequests="$(kubectl get internalrequest --sort-by=.metadata.creationTimestamp --no-headers)"
              internalRequestsCount=$(echo $internalRequests | wc -w)

              if [ "$internalRequestsCount" != "12" ] ; then
                echo "incorrect number of internalRequests created. Expected 12"
                exit 1
              fi

              for internalRequest in ${internalRequests};
              do
                params=$(kubectl get internalrequest ${internalRequest} -o jsonpath="{.spec.params}")

                if [ $(jq -r '.manifest_digest' <<< "${params}") != "${testValues[$counter]}" ]; then
                  echo "manifest_digest does not match"
                  exit 1
                fi
                counter=$((counter+1))

              done
      runAfter:
        - run-task
  finally:
    - name: cleanup
      taskSpec:
        steps:
          - name: delete-crs
            image: quay.io/konflux-ci/release-service-utils:e633d51cd41d73e4b3310face21bb980af7a662f
            script: |
              #!/usr/bin/env sh
              set -eux

              kubectl delete internalrequests --all
