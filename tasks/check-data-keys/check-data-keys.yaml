---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: check-data-keys
  labels:
    app.kubernetes.io/version: "1.0.0"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/tags: release
spec:
  description: >-
    Tekton task to check that all required information is present to use the specified system(s) 
    and the data is valid against the schema.
  params:
    - name: dataPath
      description: Path to the JSON string of the merged data to use
      type: string
    - name: schema 
      description: URL to the JSON schema file to validate the data against
      type: string
      default: https://raw.githubusercontent.com/konflux-ci/release-service-catalog/refs/heads/development/schema/dataKeys.json
    - name: systems
      description: The systems to check that all data keys are present for
      type: array
      default: []
  workspaces:
    - name: data
      description: The workspace where the data JSON file resides
  steps:
    - name: check-data-keys
      image: quay.io/konflux-ci/release-service-utils:9089cafbf36bb889b4b73d8c2965613810f13736
      args: ["$(params.systems[*])"]
      script: |
        #!/usr/bin/env bash
        set -ex

        if [ ! -f "$(workspaces.data.path)/$(params.dataPath)" ] ; then
            echo "No data JSON was provided."
            exit 1
        fi

        if ! curl -s --fail-with-body "$(params.schema)" -o /tmp/schema ; then
            echo "Failed to download schema file: $(params.schema)"
            exit 1
        fi

        systemsJSON=$(echo "$@" | jq -R 'split(" ")')

        jq --argjson systems "$systemsJSON" '.systems += $systems' \
            "$(workspaces.data.path)/$(params.dataPath)" > "/tmp/systems" 
        mv "/tmp/systems" "$(workspaces.data.path)/$(params.dataPath)"

        check-jsonschema --output-format=text --schemafile "/tmp/schema"  "$(workspaces.data.path)/$(params.dataPath)"
