---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: test-save-collectors-results
spec:
  description: |
    Run the save-collectors-results task with rbac present, one proper results
    file in the results directory and one with an invalid name. The latter should
    be ignored and the pipeline should succeed.
  workspaces:
    - name: tests-workspace
  tasks:
    - name: setup
      taskSpec:
        steps:
          - name: setup
            image: quay.io/konflux-ci/release-service-utils:e633d51cd41d73e4b3310face21bb980af7a662f
            script: |
              #!/usr/bin/env sh
              set -eux

              mkdir "$(workspaces.data.path)/results/"
              cat > "$(workspaces.data.path)/results/managed-one.json" << EOF
              {
                  "foo": "bar"
              }
              EOF
              cat > "$(workspaces.data.path)/results/two.json" << EOF
              {
                  "baz": "qux"
              }
              EOF

              cat > release << EOF
              apiVersion: appstudio.redhat.com/v1alpha1
              kind: Release
              metadata:
                name: release-cr-status
                namespace: default
              spec:
                snapshot: foo
                releasePlan: foo
              EOF
              kubectl apply -f release
      workspaces:
        - name: data
          workspace: tests-workspace
    - name: run-task
      taskRef:
        name: save-collectors-results
      params:
        - name: resource
          value: default/release-cr-status
        - name: resultsDirPath
          value: results
      runAfter:
        - setup
      workspaces:
        - name: data
          workspace: tests-workspace
    - name: check-result
      taskSpec:
        steps:
          - name: check-result
            image: quay.io/konflux-ci/release-service-utils:e633d51cd41d73e4b3310face21bb980af7a662f
            script: |
              #!/usr/bin/env sh
              set -eux

              echo Test that the Release.Status contains proper data
              test "$(kubectl get release release-cr-status -n default \
                  -o jsonpath='{.status.collectors.managed.one.foo}')" == bar
              
              echo Test that invalid file names were ignored
              test -z "$(kubectl get release release-cr-status -n default \
                  -o jsonpath='{.status.collectors.managed.two.baz}' 2>/dev/null)"

      runAfter:
        - run-task
  finally:
    - name: cleanup
      taskSpec:
        steps:
          - name: delete-crs
            image: quay.io/konflux-ci/release-service-utils:e633d51cd41d73e4b3310face21bb980af7a662f
            script: |
              #!/usr/bin/env sh
              set -eux

              kubectl delete release release-cr-status
